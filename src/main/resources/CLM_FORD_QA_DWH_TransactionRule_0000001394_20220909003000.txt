H,DWH_TransactionRule,CLM_FORD_QA_DWH_TransactionRule_0000001394_20220909003000.txt,20220909003000
1,,2016-11-10 12:04:34,,2022-01-04 02:49:25,33001,,,SetupWalletBonus,,,2049-01-01 00:00:00,LTP:FordPass MyWallet Setup,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
2,,2016-11-10 12:04:34,,,,,,TryParkBonus,,,2049-01-01 00:00:00,LTP:FordPass Try Park,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
3,,2016-11-10 12:04:34,,,,,,OptinBonus,,,2049-01-01 00:00:00,LTP:FordPass Opt in to receive Email Communications,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
4,,2016-11-10 12:04:34,,,,,,ProfileBonus,,,2049-01-01 00:00:00,LTP:FordPass Completed Member Profile Bonus,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
5,,2016-11-10 12:04:34,,,,,,EnrollBonus,,,2049-01-01 00:00:00,LTP:FordPass Enrollment Bonus,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
6,,2016-11-10 12:04:34,,2018-09-18 03:54:07,24001,,,Park4,,,2049-01-01 00:00:00,LTP:FordPass Park 4 times in a calendar year,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
7,,2016-11-10 12:04:34,,2018-09-18 05:41:29,24001,,,Park8,,,2049-01-01 00:00:00,LTP:FordPass Park 8 times in a calendar year,2016-01-01 00:00:00,R,,ER,LTP_ARCH,"{""en"":""LTP Archive promotions""}","{""included"":[],""excluded"":[]}"
2050,,2016-11-14 13:14:17,,,,2016-11-18 17:38:50,,CompProf,"And(customer.completeProfile, customer.CounterValue('CntComProf')<1)",User must provide additional profile data beyond enrollment data points.  Primarily the address information. Customer will earn Perk,,Complete Profile,2016-11-14 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
2100,,2016-11-14 13:14:18,,,,2016-11-18 17:38:51,,FRPark16,transaction.earnCode='Park',Set the badge after the designated number of parking activities have been completed,,Park Frequency Promotion,2016-11-14 00:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
2150,,2016-11-14 13:14:19,,,,2016-11-18 17:38:53,,FordPay1,"And(EqualsIgnoreCase(customer.Attribute('FordPay'), '1'), EqualsIgnoreCase(account.HomeCountryCode(), 'USA'), customer.CounterValue('CntFPay')<1)",First time user adds a credit card to Ford Pay,,Ford Pay Setup,2016-11-14 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
3100,,2016-11-18 17:38:50,,2022-04-12 06:41:36,36001,,,Enrollment,account.HomeCountryCode()!='CAN',"User must download FordPass app, provide required registration data and accept FordPass Terms after that customer will recive badge",,Enrollment,2016-10-14 17:07:09,R,,CR,,,"{""included"":[],""excluded"":[]}"
3150,,2016-11-18 17:38:51,,2022-04-12 06:41:36,36001,,,CompProf,"And(customer.completeProfile, customer.CounterValue('CntComProf')<1, account.HomeCountryCode()!='CAN')",User must provide additional profile data beyond enrollment data points.  Primarily the address information. Customer will earn Perk,,Complete Profile,2016-11-14 00:00:00,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
3200,,2016-11-18 17:38:52,,2022-04-12 06:41:36,36001,,,FRPark16,"And(transaction.earnCode='Park',account.HomeCountryCode()!='CAN')",Set the badge after the designated number of parking activities have been completed,,Park Frequency Promotion,2016-11-14 00:00:00,R,,ER,,,"{""included"":[],""excluded"":[]}"
3250,,2016-11-18 17:38:53,,2022-04-12 06:41:36,36001,,,FordPay1,"And(EqualsIgnoreCase(customer.Attribute('FordPay'), '1'), customer.CounterValue('CntFPay')<1)",First time user adds a credit card to Ford Pay,,Ford Pay Setup,2016-11-14 00:00:00,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
3300,,2016-11-18 17:38:54,,2022-04-12 06:41:36,36001,,,FirstVIN,"And(customer.CounterValue('CntAddVIN')<1, customer.NewVinAdded(), account.HomeCountryCode()!='CAN')",Add first Vin to Profile to get Badge and Perk,,FirstVIN,2016-10-27 14:06:10,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
3350,,2016-11-18 17:38:56,,2022-04-12 06:41:36,36001,,,TryPark,"And(transaction.earnCode='Park', Or(customer.Attribute('bTryPark')='0', customer.Attribute('TryPark')='0'), account.HomeCountryCode()!='CAN')",First time a user uses park (does not cancel),,TryPark,2016-10-27 15:45:31,R,,ER,,,"{""included"":[],""excluded"":[]}"
3400,,2016-11-18 17:38:57,,2022-04-12 06:41:36,36001,,,PrefDealer,"And(customer.CounterValue('CntPDealer')<1, customer.Attribute('PreferredDealer')='1', account.HomeCountryCode()!='CAN')",Customer selects preferred dealer for the first time,,Preferred dealer,2016-10-27 16:07:22,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
3450,,2016-11-18 17:38:58,,2022-09-08 06:42:55,36001,,,Expiration,"And(Or(InList(transaction.type, 'CR', 'CA', 'ER', 'BR', 'PC'), transaction.pointsText!='0'), Or(IsEmpty(customer.Attribute('LastActivityDate')), customer.Attribute('LastActivityDate')<Trunc(Sysdate(), 'DAY')))",customer last activity date update,,Points renewal,2016-09-14 12:22:19,A,,"AC, BR, CA, CR, ER, PC",,,"{""included"":[],""excluded"":[]}"
4001,,2016-11-25 10:37:00,6400,2022-04-12 06:41:36,36001,,,clm_tst_pr,customer.id=100038864,Comarch test promotion,,clm_tst_pr,2016-11-25 10:31:36,R,,ER,,,"{""included"":[],""excluded"":[]}"
5001,,2016-12-06 16:27:58,6100,2021-02-22 04:25:18,33001,,,DelayP,transaction.earnCode='Park',Whiz USA delayed park transactions,,DelayedPark,2016-12-01 16:26:49,R,,ER,,,"{""included"":[],""excluded"":[]}"
6001,,2017-02-28 13:05:24,6100,2022-04-12 06:41:36,36001,,,OEW,"And(EqualsIgnoreCase(customer.Attribute('OEW'), '1'), account.HomeCountryCode()!='CAN')",OEW registration was completed.,,Warranty registration,2017-02-28 12:50:51,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
6002,,2017-03-01 06:58:18,6400,2022-04-12 06:41:36,36001,,,TryPPerk,"And(transaction.earnCode='Park', customer.CounterValue('TryPPerk.TryPPerk')<1, account.HomeCountryCode()='USA')","Email campaign should include app users with complete profiles (completed before atleast 14 days or more), to reserve a parking spot to try parking and pay for the 1st time (they have NOT tried parking earlier). Once the user completed a parking (without cancel) activity is recorded in CLM (from MSL), CLM will check against the eligible segment list to trigger the perk redemption email to the user. This is valid only for US.",,TryPPerk,2017-03-01 06:44:56,R,,ER,,,"{""excluded"":[],""included"":[{""code"":""TryParkPerkSegment""}]}"
6003,,2017-03-02 14:01:17,6250,2021-02-22 04:47:04,33001,,,SvcVisit,"And(transaction.earnCode='SvcVisit', account.HomeCountryCode()!='CAN')",When a member completes a Service Visit - used to count transactions for future analytics,,SvcVisit,2017-03-02 13:41:32,R,,ER,,,"{""included"":[],""excluded"":[]}"
7001,,2017-03-02 13:42:24,6250,2022-04-12 06:41:36,36001,,,TestDrive,"And(account.HomeCountryCode()='DEU', customer.CounterValue('CntTstDrv')<1, customer.Attribute('TestDrive')='1')",When a member completes a test drive (DEU Only) - Awards badge and in-App msg,,TestDrive,2017-03-02 13:41:32,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
8001,,2017-04-21 14:13:34,6250,,,2017-04-26 14:40:30,6250,GGWinners,"And(transaction.earnCode='GGTixWin', account.HomeCountryCode()='USA')",Surprise and Delight Campaign to promote the new EcoSport vehicle-storing transactions identifying winners in CLM,,Ticket Winners,2017-04-21 00:00:01,I,,ER,,,"{""excluded"":[],""included"":[]}"
8002,,2017-04-21 14:21:17,6250,,,2017-04-26 14:40:19,6250,GGTixOffer,"And(transaction.earnCode='ActiveModem', account.HomeCountryCode()='USA')",Surprise and Delight Campaign to promote the new EcoSport vehicle,2017-05-05 23:59:59,Ticket Offer,2017-04-26 00:00:00,I,,ER,,,"{""excluded"":[],""included"":[]}"
9001,,2017-04-26 14:47:08,6250,2017-08-31 11:46:41,12001,2017-08-31 11:46:50,12001,SpOfferWin,,Promotion to track members who were selected to win a special offer,,SpOfferWin,2017-04-26 14:45:15,I,B,ER,,,"{""included"":[],""excluded"":[]}"
9051,,2017-04-26 14:49:54,6250,2017-08-31 11:44:48,12001,2017-08-31 11:45:11,12001,SpecOffer,,"Promotion to send email to targeted members, and track winners of special offer",,SpecOffer,2017-04-26 14:47:40,I,B,ER,,,"{""included"":[],""excluded"":[]}"
10001,,2017-06-26 13:46:51,6250,2017-09-11 06:43:45,6250,2017-09-11 06:43:51,6250,HzBorrow,"And(transaction.earnCode='HertzComp', account.HomeCountryCode()='GBR')",Inform CLM when a Hertz Borrow (UK) transaction is completed,,HzBorrow,2017-06-26 13:44:33,I,,ER,,,"{""included"":[],""excluded"":[]}"
11001,,2017-08-08 11:36:37,,2022-04-12 06:41:36,36001,,,LOGIN,activity.code = 'LOGIN',Daily Portal Login,,Daily Login,2017-08-08 11:36:37,R,,AC,,,"{""included"":[],""excluded"":[]}"
11952,,2017-08-10 10:42:41,12001,2022-04-12 06:41:36,36001,,,Survey1,activity.code='LOGIN',This is a survey promotion that will be triggered when the user has logged into the web app three times.,,Survey 1,2017-08-10 10:38:43,R,,AC,,,"{""included"":[],""excluded"":[]}"
11953,,2017-08-10 11:13:31,6250,2022-04-12 06:41:36,36001,,,Enroll_Ent,account.HomeCountryCode()='USA',"User must download FordPass app, provide required registration data and accept FordPass Terms after which the user will be awarded 50 entries",2017-12-12 23:59:59,Register for FordPass,2016-10-14 17:07:09,R,,CR,,,"{""included"":[],""excluded"":[]}"
11954,,2017-08-10 11:52:52,12001,2022-04-12 06:41:36,36001,,,Survey_CR,"And(questionnaire.code=('QST_3001'), account.HomeCountryCode()='USA')",This is the promotion that will trigger issuing credits.,,Survey 1 Promo,2017-08-10 11:51:47,R,,CQ,,,"{""included"":[],""excluded"":[]}"
11955,,2017-08-10 12:12:15,6250,2022-04-12 06:41:36,36001,,,CmpPro_Ent,"And(customer.completeProfile, customer.CounterValue('CompProf.CntComProf')<1, account.HomeCountryCode()='USA')",User must provide additional profile data beyond enrollment data points. Primarily the address information. Customer will be awarded 100 entries,2017-12-12 23:59:59,Complete your Profile,2016-11-14 00:00:00,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
11956,,2017-08-10 12:40:40,6250,2022-04-12 06:41:36,36001,,,AddVIN_Ent,"And(customer.CounterValue('CntAddVIN')<6, customer.NewVinAdded(), account.HomeCountryCode()='USA')",Add first Vin to Profile to be awarded 20 credits,2017-12-12 23:59:59,Add your Vehicle,2016-10-27 14:06:10,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
11957,,2017-08-10 12:43:47,6250,2022-04-12 06:41:36,36001,,,PrfDlr_Ent,"And(customer.CounterValue('PrefDealer.CntPDealer')<1, customer.Attribute('PreferredDealer')='1', account.HomeCountryCode()='USA')",Customer selects preferred dealer for the first time and is awarded 100,2017-12-12 23:59:59,Select your Preferred Dealer,2016-10-27 16:07:22,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
11958,,2017-08-10 15:26:54,6250,2022-04-12 06:41:36,36001,,,D3_Login,activity.code = 'LOGIN',Third Login SurveyStatusActive,,Third Login Survey,2017-08-08 11:36:37,R,,AC,,,"{""included"":[],""excluded"":[]}"
12002,,2017-08-10 12:47:08,6250,2022-04-12 06:41:36,36001,,,FordPy_Ent,"And(EqualsIgnoreCase(customer.Attribute('FordPay'), '1'), customer.CounterValue('FordPay1.CntFPay')<1, account.HomeCountryCode()='USA')",First time user adds a credit card to Ford Pay they will earn 50 entries,2017-12-12 23:59:59,Wallet Setup,2016-11-14 00:00:00,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
12003,,2017-08-10 13:44:41,12001,2022-04-12 06:41:36,36001,,,VIDEO_T,"And(transaction.activityCode=('VIDEOT'), account.HomeCountryCode()='USA')",This promo was created to test the video feature.,,Video Test,2017-08-10 13:42:59,R,,AC,,,"{""included"":[],""excluded"":[]}"
12952,,2017-08-22 08:57:12,6250,2022-04-12 06:41:36,36001,,,Lot_H2go,,Member submits entries for chances to win a H2go Water bottle,,H2Go Water Bottle Sweeps,2017-08-21 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
13002,,2017-08-22 09:25:32,6250,2022-04-12 06:41:36,36001,,,Lot_Yoga,,Member submits entries for chances to win a Everlast Yoga Mat,,Everlast Yoga Mat,2017-08-21 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
13952,,2017-08-30 09:56:10,6250,2022-04-12 06:41:36,36001,,,VWVideoFPO,"And(transaction.activityCode='VideoFPOver', account.HomeCountryCode()='USA')","When a member watches brightcove ""FordPass Overview"", they are awarded 20 entries",2017-12-12 23:59:59,ViewVideoFPO,2017-08-10 13:42:59,R,,AC,,,"{""included"":[],""excluded"":[]}"
13953,,2017-08-30 15:26:39,12001,2022-04-12 06:41:36,36001,,,VWVideoHub,"And(transaction.activityCode='VideoHub', account.HomeCountryCode()='USA')","When a member watches brightcove ""FordHub NYC"", they are awarded 20 entries",2017-12-12 23:59:59,ViewVideoHub,2017-08-30 15:22:51,R,,AC,,,"{""included"":[],""excluded"":[]}"
13954,,2017-08-30 15:39:43,12001,2022-04-12 06:41:36,36001,,,VWVideoUns,"And(transaction.activityCode=('VideoUnstuck'), account.HomeCountryCode()='USA')","When a member watches brightcove ""Ford Unstuck"", they are awarded 20 entries",2017-12-12 23:59:59,ViewVideoUnS,2017-08-30 15:35:35,R,,AC,,,"{""included"":[],""excluded"":[]}"
13955,,2017-08-30 18:44:03,6250,2022-04-12 06:41:36,36001,,,3rdLogin,"And(activity.code='LOGIN', account.HomeCountryCode()='USA')","When the user has logged into the web app three times, present them with a survey to collect information regarding their experience with the web app.",2017-12-12 23:59:59,3rdLoginSurvey,2017-08-10 10:38:43,R,,AC,,,"{""included"":[],""excluded"":[]}"
13956,,2017-08-30 18:46:46,6250,2022-04-12 06:41:36,36001,,,Srv3LogSub,"And(questionnaire.code='Survey3rdLogin', account.HomeCountryCode()='USA')","When the user submits the survey ""Srv3rdLogin"", they are awarded 50 entries.",2017-12-31 18:45:00,SubmitLoginSurvey,2017-08-10 11:51:47,R,,CQ,,,"{""included"":[],""excluded"":[]}"
13957,,2017-08-30 18:50:25,6250,2022-04-12 06:41:36,36001,,,DlyLogin,"And(activity.code='LOGIN', account.HomeCountryCode()='USA')",Tracks daily login activity and awards 5 entries for the first login of the day,2017-12-12 23:59:59,Track daily login,2017-08-08 11:36:37,R,,AC,,,"{""included"":[],""excluded"":[]}"
13958,,2017-08-31 06:42:37,6250,2022-04-12 06:41:36,36001,,,RdmTGtTX,,Member submits entries for chances to win our tickets to Dallas Cowboys vs Kansas City Chiefs game,2017-10-26 06:36:00,Game Day Tailgate Experience,2017-08-30 08:44:49,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""},{""code"":""SegCustOK""}]}"
13959,,2017-08-31 06:47:56,6250,2022-04-12 06:41:36,36001,,,RdmLustTN,,Member submits entries for chances to win two tickets to the one-day Wanderlust 108 event in Nashville,2017-10-26 06:36:00,Wanderlust 108 Event,2017-08-30 08:44:49,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTN""}]}"
13960,,2017-08-31 14:18:25,12001,2021-02-22 04:26:23,33001,,,EIGG2Aud2,transaction.earnCode='TargetAudience',Audience 2 included members that were in the Eco Sport target segment.,,Guardians Aud 2,2017-08-01 14:17:13,R,B,ER,,,"{""included"":[],""excluded"":[]}"
13961,,2017-08-31 14:41:58,6250,2022-04-12 06:41:36,36001,,,RdmBOEBuds,,Member submits entries for chances to win Bang & Olufsen Ear Buds,2017-10-26 06:36:00,Bang & Olufsen Ear Buds,2017-08-30 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
13962,,2017-08-31 14:44:24,6250,2022-04-12 06:41:36,36001,,,RdmLPPlay,,Member submits entries for chances to win a Mustang LP Record Player,2017-10-26 06:36:00,Mustang LP Record Player,2017-08-30 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
13963,,2017-08-31 14:46:17,6250,2022-04-12 06:41:36,36001,,,RdmNFLCard,,Member submits entries for chances to win a NFLShop.com Gift Card,2017-10-26 06:36:00,NFLShop.com Gift Card,2017-08-30 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
13964,,2017-08-31 14:47:45,6250,2022-04-12 06:41:36,36001,,,RdmYeti,,Member submits entries for chances to win a YETI Package,2017-10-26 06:36:00,YETI Package,2017-08-30 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
13965,,2017-08-31 15:13:51,6250,2022-04-12 06:41:36,36001,,,TryPk_Ent,"And(transaction.earnCode='Park', account.HomeCountryCode()='USA')",First time a user uses park (does not cancel). Customer will be awarded 50 entries,2017-12-12 23:59:59,Park,2016-10-27 15:45:31,R,,ER,,,"{""included"":[],""excluded"":[]}"
14002,,2017-08-30 15:02:47,12001,2022-04-12 06:41:36,36001,,,VWVideoCOT,"And(transaction.activityCode='VideoCOT', account.HomeCountryCode()='USA')","When a member watches brightcove ""Imagining the City of Tomorrow"", they are awarded 20 entries",2017-12-12 23:59:59,ViewVideoCOT,2017-08-10 14:54:58,R,,AC,,,"{""included"":[],""excluded"":[]}"
14003,,2017-08-31 06:39:09,6250,2022-04-12 06:41:36,36001,,,RdmRaceSch,,Member submits entries for chances to win a two-day course at the Ford Performance Racing School,2017-10-26 06:36:00,Ford Performance Racing School,2017-08-30 08:44:49,R,,BR,,,"{""included"":[],""excluded"":[]}"
14004,,2017-08-31 06:44:53,6250,2017-08-31 14:50:06,6250,2017-08-31 14:50:12,6250,RwdTGtAZ,,Member submits entries for chances to win our tickets to Arizona Cardinals home game,2017-10-26 06:36:00,Game Day Tailgate Experience,2017-08-30 08:44:49,I,,BR,,,"{""included"":[],""excluded"":[]}"
14005,,2017-08-31 14:17:00,12001,2021-02-22 04:26:21,33001,,,EIGG2Aud1,transaction.earnCode='ProfileAudience',"Audience 1 were the members that received notification that they were eligible to participate in the GG sweeps. Specifically, they were individuals that connected their sync modem.",,Guardians Aud 1,2017-08-01 14:15:59,R,B,ER,,,"{""included"":[],""excluded"":[]}"
14006,,2017-08-31 14:20:48,12001,2021-02-22 04:26:26,33001,,,EIGG2Win,transaction.earnCode='SelectedWinner',Members were awarded with movie tickets to Guardians of the Galaxy and the sweeps were administered and fulfilled by Exposure.,,Guardians Winners,2017-09-29 13:59:12,R,B,ER,,,"{""included"":[],""excluded"":[]}"
14007,,2017-08-31 14:35:20,6250,2017-08-31 14:38:14,6250,2017-08-31 14:38:28,6250,RdmTailGtA,,Member submits entries for chances to win our tickets to see the Arizona Cardinals home game ,2017-10-26 06:36:00,Game Day Tailgate Experience,2017-08-30 08:44:49,I,,BR,,,"{""included"":[],""excluded"":[]}"
14008,,2017-08-31 14:37:25,6250,2022-04-12 06:41:36,36001,,,RdmTGtAZ,,Member submits entries for chances to win our tickets to see the Arizona Cardinals home game,2017-10-26 06:36:00,Game Day Tailgate Experience,2017-08-30 08:44:49,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustAZ""}]}"
14009,,2017-08-31 14:56:14,6250,2022-04-12 06:41:36,36001,,,RdmLstTXOK,,Member submits entries for chances to win two tickets to the one-day Wanderlust 108 event in Austin,2017-10-26 06:36:00,Wanderlust 108,2017-08-30 08:44:49,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""}]}"
14952,,2017-09-11 08:56:22,6250,2021-02-22 02:48:50,33001,,,BorrowLog,"And(transaction.earnCode='Borrow_Login', account.HomeCountryCode()='GBR')","When a member logs into Hertz to borrow a vehicle, count the transactions",,Hertz Vehicle Borrow Login,2016-11-14 00:00:00,R,,ER,,,"{""included"":[],""excluded"":[]}"
14953,,2017-09-11 08:57:42,6250,2021-02-22 02:48:52,33001,,,BorrowReg,"And(transaction.earnCode='Borrow_Register', account.HomeCountryCode()='GBR')","When a member Registers with Hertz to borrow a vehicle, count the transactions",,Hertz Vehicle Borrow Registration,2016-11-14 00:00:00,R,,ER,,,"{""included"":[],""excluded"":[]}"
14954,,2017-09-11 08:58:55,6250,2021-02-22 02:48:55,33001,,,BorrowRes,"And(transaction.earnCode='Borrow_Reserve', account.HomeCountryCode()='GBR')","When a member Reserves a vehicle with Hertz, count the transactions",,Hertz Vehicle Borrow Reservation,2016-11-14 00:00:00,R,,ER,,,"{""included"":[],""excluded"":[]}"
15952,,2017-09-28 06:12:45,6250,2022-04-12 06:41:37,36001,,,SegRefresh,account.HomeCountryCode()='USA',Customer address information update process when a member engages with the Perks Webapp,,SegRefresh,2017-09-28 06:06:54,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
16952,,2017-10-09 09:09:28,6550,2017-10-09 09:14:11,6550,2017-10-09 09:17:06,6550,TEST,,,,TEST2,2017-10-09 09:04:32,I,,ER,,,"{""included"":[],""excluded"":[]}"
16953,,2017-10-09 21:23:04,6250,2022-04-12 06:41:36,36001,,,VwVideoPwr,"And(transaction.activityCode='VideoMorePwr', account.HomeCountryCode()='USA')","When a member watches brightcove ""More power. More tech"", they are awarded 20 entries",2017-12-12 23:59:59,ViewVideoPwr,2017-10-09 13:42:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
16954,,2017-10-09 21:31:35,6250,2022-04-12 06:41:37,36001,,,VwVideoOut,"And(transaction.activityCode='VideoLockedOut', account.HomeCountryCode()='USA')","When a member watches brightcove ""Love that app"", they are awarded 20 entries",2017-12-12 23:59:00,ViewVideoOut,2017-10-09 13:42:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
16955,,2017-10-18 13:11:57,12001,2022-04-12 06:41:37,36001,,,VwVideoOff,"And(transaction.activityCode='VideoRFToff', account.HomeCountryCode()='USA')","When a member watches brightcove ""Ready for Takeoff"", they are awarded 20 entries",2017-12-12 23:59:59,ViewVideoOff,2017-10-01 11:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
16956,,2017-10-18 13:16:06,12001,2022-04-12 06:41:37,36001,,,VwVideoWay,"And(transaction.activityCode='VideoWayPark', account.HomeCountryCode()='USA')","When a member watches brightcove ""A Better Way to Park"", they are awarded 20 entries",2017-12-12 23:59:00,ViewVideoWay,2017-10-01 11:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
17002,,2017-10-09 21:27:54,6250,2022-04-12 06:41:36,36001,,,VwVideoPrk,"And(transaction.activityCode='VideoReservePark', account.HomeCountryCode()='USA')","When a member watches brightcove ""Wanna bet?"", they are awarded 20 entries",2017-12-12 23:59:00,ViewVideoPrk,2017-10-09 13:42:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
17003,,2017-10-10 10:06:19,6250,2022-04-12 06:41:36,36001,,,RdmFDChamp,,Member submits entries for chances to win VIP Race Tickets to the Monster Energy NASCAR Cup Series Ford EcoBoost 400 and a special garage and pit tour,2017-10-30 06:36:00,Ford Championship Weekend,2017-10-09 08:44:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17004,,2017-10-10 10:13:00,6250,2022-04-12 06:41:36,36001,,,RdmTGtPA,,Member submits entries for chances to win our tickets to Pittsburgh Steelers Home Game,2017-10-30 06:36:00,Game Day Tailgate Experience,2017-10-09 08:44:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustPA""}]}"
17005,,2017-10-10 10:15:31,6250,2022-04-12 06:41:36,36001,,,RdmTGtIL,,Member submits entries for chances to win our tickets to Chicago Bears  vs  Detroit Lions game,2017-10-30 06:36:00,Game Day Tailgate Experience,2017-10-09 08:44:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustIL""}]}"
17006,,2017-10-10 10:18:00,6250,2022-04-12 06:41:36,36001,,,RdmTGtHou,,Member submits entries for chances to win our tickets to Houston Texans vs the Arizona Cardinals game,2017-10-30 06:36:00,Game Day Tailgate Experience,2017-10-09 08:44:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""}]}"
17007,,2017-10-10 10:20:03,6250,2022-04-12 06:41:36,36001,,,RdmTGtDal,,Member submits entries for chances to win our tickets to Dallas Cowboys Home Game game,2017-10-30 06:36:00,Game Day Tailgate Experience,2017-10-09 08:44:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""},{""code"":""SegCustOK""}]}"
17008,,2017-10-10 10:22:03,6250,2022-04-12 06:41:36,36001,,,RdmTGtDet,,Member submits entries for chances to win our tickets to Detroit Lions Home Game,2017-10-30 06:36:00,Game Day Tailgate Experience,2017-10-09 08:44:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustMI""}]}"
17009,,2017-10-10 10:24:54,6250,2022-04-12 06:41:36,36001,,,RdmPcktSp,,Member submits entries for chances to win a BeoPlay P2 Pocket Speaker,2017-10-30 06:36:00,BeoPlay P2 Pocket Speaker,2017-10-09 08:44:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17010,,2017-10-10 10:26:23,6250,2022-04-12 06:41:36,36001,,,RdmTechPk,,Member submits entries for chances to win a PowerStick Portable Tech Pack,2017-10-30 06:36:00,PowerStick Portable Tech Pack,2017-10-09 08:44:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17011,,2017-10-10 10:28:01,6250,2022-04-12 06:41:36,36001,,,RdmWeberQ,,Member submits entries for chances to win a Weber Grill & BBQ Set ,2017-10-30 06:36:00,Weber Grill & BBQ Set ,2017-10-09 08:44:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17012,,2017-10-10 10:29:17,6250,2022-04-12 06:41:36,36001,,,RdmNFLGift,,Member submits entries for chances to win a NFLShop.com Gift Card,2017-10-30 06:36:00,NFLShop.com Gift Card,2017-10-09 08:44:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17013,,2017-10-18 13:20:25,12001,2022-04-12 06:41:37,36001,,,VwVideoSmo,"And(transaction.activityCode='VideoSmooth', account.HomeCountryCode()='USA')","When a member watches brightcove ""Making your journey smoother"", they are awarded 20 entries",2017-12-12 23:59:00,ViewVideoSmooth,2017-10-01 11:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
17952,,2017-10-20 12:29:03,12001,2022-04-12 06:41:36,36001,,,RdmVIPColl,,Member submits entries for chances to win a VIP College Experience,2017-11-13 23:59:59,VIP College Football Experience,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17953,,2017-10-20 12:35:39,12001,2022-04-12 06:41:36,36001,,,RdmTailJag,,Member submits entries for chances to win a Tailgate Experience,2017-11-13 23:59:59,Game Day Tailgate Experience,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustFL""}]}"
17954,,2017-10-20 12:44:10,12001,2022-04-12 06:41:36,36001,,,RdmTailMia,,Member submits entries for chances to win a Tailgate Experience,2017-11-13 23:59:59,Game Day Tailgate Experience,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustFL""}]}"
17955,,2017-10-20 12:51:22,12001,2022-04-12 06:41:37,36001,,,RdmSteeler,,Member submits entries for chances to win a Game Day Tailgate Experience,2017-11-13 23:59:59,Game Day Tailgate Experience,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustPA""}]}"
17956,,2017-10-20 12:58:33,12001,2022-04-12 06:41:37,36001,,,RdmNFLCrd3,,Member submits entries for chances to win a NFLShop.com Gift Card,2017-11-13 23:59:59,NFLShop.com Gift Card,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17957,,2017-10-20 16:25:03,12001,2022-04-12 06:41:37,36001,,,RdmMaui,,Member submits entries for chances to win a Maui Golf Package,2017-11-13 23:59:59,Maui Golf Package,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17958,,2017-10-20 16:33:12,12001,2022-04-12 06:41:37,36001,,,RdmGPine,,Member submits entries for chances to win a trip to Pinehurst,2017-11-13 23:59:59,Golf Adventure in Pinehurst,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustKY""},{""code"":""SegCustTN""},{""code"":""SegCustVA""},{""code"":""SegCustNC""}]}"
17959,,2017-10-20 16:36:55,12001,2022-04-12 06:41:37,36001,,,RdmTKiaw,,Member submits entries for chances to win a trip to Kiawah,2017-11-13 23:59:59,Golf Adventure in Kiawah Island,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustSC""},{""code"":""SegCustGA""}]}"
17960,,2017-10-20 16:43:46,12001,2022-04-12 06:41:37,36001,,,RdmPro,,Member submits entries for chances to win a GoPro Hero,2017-11-13 23:59:59,GoPro HERO 5 Package,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
17961,,2017-10-20 16:50:41,12001,2022-04-12 06:41:37,36001,,,RdmEcho,,Member submits entries for chances to win an Echo Show,2017-11-13 23:59:59,Amazon Echo Show,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
18002,,2017-10-20 12:47:37,12001,2022-04-12 06:41:37,36001,,,RdmLionBea,,Member submits entries for chances to win a Tailgate Experience,2017-11-13 23:59:59,Game Day Tailgate Experience,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustMI""}]}"
18003,,2017-10-20 12:54:54,12001,2022-04-12 06:41:37,36001,,,RdmHouston,,Member submits entries for chances to win a Tailgate Experience,2017-11-13 23:59:59,Game Day Tailgate Experience,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""}]}"
18004,,2017-10-20 16:29:17,12001,2022-04-12 06:41:37,36001,,,RdmVail,,Member submits entries for chances to win a Vail Ski Package,2017-11-13 23:59:59,Vail Ski Package,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
18005,,2017-10-20 16:40:55,12001,2022-04-12 06:41:37,36001,,,RdmGPeb,,Member submits entries for chances to win golf at Pebble Beach,2017-11-13 23:59:59,Golf Adventure in Pebble Beach,2017-10-20 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustAZ""},{""code"":""SegCustCA""},{""code"":""SegCustNV""}]}"
18006,,2017-10-20 16:47:37,12001,2022-04-12 06:41:37,36001,,,RdmGBall,,Member submits entries for chances to win golf balls,2017-11-13 23:59:59, Titleist® Pro V1x™ Golf Balls ,2017-10-20 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
18952,,2017-10-24 17:00:27,12001,2022-04-12 06:41:37,36001,,,SurveyMaui,"And(customer.CounterValue('RdmMaui.CntMauSur')=1, account.HomeCountryCode()='USA')",This promotion is used to trigger the survey to the user in the web app.,2017-12-25 17:02:00,Survey Maui,2017-10-24 16:57:08,R,,BR,,,"{""included"":[],""excluded"":[]}"
19002,,2017-10-25 10:45:13,12001,2022-04-12 06:41:37,36001,,,SrvyOvrVid,"And(transaction.activityCode='VideoFPOver', customer.CounterValue('VWVideoFPO.CntVFPO')=1, account.HomeCountryCode()='USA')",This promo will be used to trigger the overview video survey.,2017-12-12 23:59:59,Overview Video Survey,2017-10-25 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
19003,,2017-10-27 14:45:32,12001,2022-04-12 06:41:37,36001,,,VwHubTour,"And(transaction.activityCode='VidHubTour', account.HomeCountryCode()='USA')","When a member watches brightcove ""FordHubs Instagram Tour"" they are awarded 20 entries",2017-12-12 23:59:59,ViewHubs Instagram Tour,2017-10-27 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
19052,,2017-10-25 11:41:43,12001,2022-04-12 06:41:37,36001,,,SrvOvrEarn,"And(questionnaire.code='SrvOvrview', account.HomeCountryCode()='USA')",This is the promo that will be used to award entries when a user takes a survey after watching the overview video (FPO).,2017-12-12 23:59:59,Overview Video Earn Promo,2017-10-25 11:37:41,R,,CQ,,,"{""included"":[],""excluded"":[]}"
19952,,2017-10-30 15:25:44,12001,2022-04-12 06:41:37,36001,,,RdmHolExp,,Member submits entries for chances to win a NY Experience,2017-11-27 23:59:59,New York Holiday Experience,2017-10-30 15:19:46,R,,BR,,,"{""included"":[],""excluded"":[]}"
19953,,2017-10-30 15:43:41,12001,2022-04-12 06:41:37,36001,,,RdmAZThril,,Member submits entries for chances to win an AZ Thrill Experience,2017-11-27 23:59:59,Arizona Thrill-Seeker Family Experience,2017-10-30 15:19:46,R,,BR,,,"{""included"":[],""excluded"":[]}"
19954,,2017-10-30 15:47:18,12001,2022-04-12 06:41:37,36001,,,RdmLAExp,,Member submits entries for chances to win a LA Shopping Experience,2017-11-27 23:59:59,Los Angeles Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustNV""},{""code"":""SegCustAZ""},{""code"":""SegCustCA""}]}"
19955,,2017-10-30 15:57:29,12001,2022-04-12 06:41:37,36001,,,RdmNYExp,,Member submits entries for chances to win a NY Shopping Experience,2017-11-27 23:59:59,New York City Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustNY""},{""code"":""SegCustNJ""},{""code"":""SegCustRI""},{""code"":""SegCustPA""},{""code"":""SegCustMA""}]}"
19956,,2017-10-30 16:02:51,12001,2022-04-12 06:41:37,36001,,,RdmDalExp,,Member submits entries for chances to win a Dallas Shopping Experience,2017-11-27 23:59:59,Dallas Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""},{""code"":""SegCustOK""}]}"
19957,,2017-10-30 16:09:13,12001,2022-04-12 06:41:37,36001,,,RdmMiaExp,,Member submits entries for chances to win a Miami theater experience,2017-11-27 23:59:59,Miami Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustFL""}]}"
19958,,2017-10-30 16:12:29,12001,2022-04-12 06:41:37,36001,,,RdmChiExp,,Member submits entries for chances to win a Chicago Shopping Experience,2017-11-27 23:59:59,Chicago Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustIL""},{""code"":""SegCustWI""}]}"
19959,,2017-10-30 16:22:21,12001,2022-04-12 06:41:37,36001,,,RdmMustGT,,Member submits entries for chances to win a Mustang pedal kart,2017-11-29 23:59:59,Mustang GT Pedal Kart,2017-10-30 15:19:46,R,,BR,,,"{""included"":[],""excluded"":[]}"
19960,,2017-11-02 09:26:33,6250,2022-04-12 06:41:37,36001,,,OLOW_Limit,activity.type='O',This rule defines the limits for submitting selections for Offensive Line of the Week pick,2017-12-26 23:59:59,Offensive Line of the Week Submission Limit,2017-11-15 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
20002,,2017-10-30 15:51:48,12001,2022-04-12 06:41:37,36001,,,RdmDetExp,,Member submits entries for chances to win a Detroit Theater Experience,2017-11-27 23:59:59,Detroit Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustOH""},{""code"":""SegCustIN""},{""code"":""SegCustMI""}]}"
20003,,2017-10-30 16:06:20,12001,2022-04-12 06:41:37,36001,,,RdmMplsEx,,Member submits entries for chances to win a Mpls shopping experience,2017-11-27 23:59:59,Minneapolis Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustIA""},{""code"":""SegCustMN""}]}"
20004,,2017-10-30 16:15:45,12001,2022-04-12 06:41:37,36001,,,RdmAtlExp,,Member submits entries for chances to win an Atlanta shopping experience,2017-11-27 23:59:59,Atlanta Theater and Shopping Experience,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustSC""},{""code"":""SegCustGA""}]}"
20005,,2017-10-30 16:18:05,12001,2022-04-12 06:41:37,36001,,,RdmNashEx,,Member submits entries for chances to win a Nashville shopping experience,2017-11-27 23:59:59,Nashville Theater and Shopping Experience ,2017-10-30 15:19:46,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustKY""},{""code"":""SegCustNC""},{""code"":""SegCustTN""},{""code"":""SegCustVA""}]}"
20006,,2017-10-30 16:20:30,12001,2017-11-09 11:33:56,6250,2017-11-09 11:34:14,6250,RdmEcho2,,Member submits entries for chances to win an Amazon Echo Show,2017-11-27 23:59:59,Amazon Echo Show,2017-10-30 15:19:46,I,,BR,,,"{""included"":[],""excluded"":[]}"
20007,,2017-10-30 16:24:55,12001,2022-04-12 06:41:37,36001,,,RdmExGas,,Member submits entries for chances to win an Exxon gift card,2017-11-27 23:59:59,Exxon Mobil Gas Card,2017-10-30 15:19:46,R,,BR,,,"{""included"":[],""excluded"":[]}"
20008,,2017-10-30 16:27:08,12001,2022-04-12 06:41:37,36001,,,RdmNFLCrd4,,Member submits entries for chances to win an NFLShop.com Gift card,2017-11-27 23:59:59,NFLShop.com Gift Card,2017-10-30 15:19:46,R,,BR,,,"{""included"":[],""excluded"":[]}"
20009,,2017-11-02 09:57:17,6250,2022-04-12 06:41:37,36001,,,OLOW_Win,transaction.earnCode='OLOWWinner',Issue USAEntries for choosing the winning team ,2017-12-27 23:59:59,Built Ford Tough O-Line Winner,2017-11-15 00:00:00,R,,ER,,,"{""included"":[],""excluded"":[]}"
20010,,2017-11-03 10:14:58,12001,2017-11-03 15:19:49,12001,2017-11-03 15:20:01,12001,VwHubTourE,"And(questionnaire.code='SurvHubs', account.HomeCountryCode()='USA')","When a member takes a survey after watching ""FordHubs Instagram Tour"" video they are awarded 50 entries",2017-12-25 23:59:59,ViewHubs Instagram Tour - Earn Promo,2017-11-03 10:10:19,I,,CQ,,,"{""included"":[],""excluded"":[]}"
20011,,2017-11-03 10:17:28,12001,2017-11-03 15:18:38,12001,2017-11-03 15:18:46,12001,VwHubTourT,"And(transaction.activityCode='VidHubTour', customer.CounterValue('VwHubTour.CntVHub')=1, account.HomeCountryCode()='USA')","When a member watches brightcove ""FordHubs Instagram Tour"" they are prompted with a Hub survey",2017-12-25 23:59:59,ViewHubs Instagram Tour - Survey Trigger,2017-11-03 10:15:05,I,,AC,,,"{""included"":[],""excluded"":[]}"
20012,,2017-11-03 15:16:27,12001,2022-04-12 06:41:37,36001,,,SrvHubTour,"And(questionnaire.code='SurvHubs', account.HomeCountryCode()='USA')","When a member takes a survey after watching ""FordHubs Instagram Tour"" video they are awarded 50 entries",2017-12-12 23:59:59,ViewHubs Instagram Tour - Earn Promo,2017-11-03 10:10:19,R,,CQ,,,"{""included"":[],""excluded"":[]}"
20013,,2017-11-03 15:17:22,12001,2022-04-12 06:41:37,36001,,,SrvHubTrig,"And(transaction.activityCode='VidHubTour', customer.CounterValue('VwHubTour.CntVHubIns')=1, account.HomeCountryCode()='USA')","When a member watches brightcove ""FordHubs Instagram Tour"" they are prompted with a Hub survey",2017-12-12 23:59:59,ViewHubs Instagram Tour - Survey Trigger,2017-11-03 10:15:05,R,,AC,,,"{""included"":[],""excluded"":[]}"
20952,,2017-11-09 08:30:49,6250,2022-04-12 06:41:37,36001,,,RdmAmEc,,Member submits entries for chances to win an Amazon Echo Show,2017-11-27 23:59:59,Amazon Echo Show,2017-10-30 15:19:46,R,,BR,,,"{""included"":[],""excluded"":[]}"
21952,,2017-11-14 09:52:15,12001,2022-04-12 06:41:37,36001,,,VwHandsOff,"And(transaction.activityCode='VideoHandsOff', account.HomeCountryCode()='USA')","When a member watches brightcove ""Hands Off"", they are awarded 20 entries",2017-12-12 23:59:59,Hands Off,2017-11-14 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
21953,,2017-11-14 10:04:05,12001,2022-04-12 06:41:37,36001,,,VwCoolCat,"And(transaction.activityCode='VideoCoolCat', account.HomeCountryCode()='USA')","When a member watches brightcove ""Cool Cat"", they are awarded 20 entries",2017-12-12 23:59:59,Cool Cat Video,2017-11-14 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
22952,,2017-11-15 11:20:36,12001,2022-04-12 06:41:37,36001,,,RdmSFTour,,Member submits entries for chances to win a San Francisco to LA Tour Package,2017-12-11 23:59:59,San Francisco to LA Tour Package,2017-11-15 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
22953,,2017-11-15 11:23:20,12001,2022-04-12 06:41:37,36001,,,RdmCarib,,Member submits entries for chances to win a Caribbean Family Cruise,2017-12-11 23:59:59,Caribbean Family Cruise,2017-11-15 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
23002,,2017-11-15 11:26:00,12001,2022-04-12 06:41:37,36001,,,RdmDTFood,,Member submits entries for chances to win a Detroit experience for two.,2017-12-11 23:59:59,Detroit Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustMI""}]}"
23003,,2017-11-15 11:29:16,12001,2022-04-12 06:41:37,36001,,,RdmNYFood,,Member submits entries for chances to win a NY Foodie Experience.,2017-12-11 23:59:59,New York Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustRI""},{""code"":""SegCustNY""},{""code"":""SegCustNJ""},{""code"":""SegCustPA""}]}"
23004,,2017-11-15 11:32:22,12001,2022-04-12 06:41:37,36001,,,RdmTXFood,,Member submits entries for chances to win a Dallas Foodie Experience,2017-12-11 23:59:59,Dallas Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""},{""code"":""SegCustOK""}]}"
23005,,2017-11-15 11:34:41,12001,2022-04-12 06:41:37,36001,,,RdmMNFood,,Member submits entries for chances to win a MN Foodie experience,2017-12-11 23:59:59,Minneapolis Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustMN""}]}"
23006,,2017-11-15 11:37:34,12001,2022-04-12 06:41:37,36001,,,RdmFLFood,,Member submits entries for chances to win a Miami Foodie experience,2017-12-11 23:59:59,Miami Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustFL""}]}"
23007,,2017-11-15 11:40:07,12001,2022-04-12 06:41:37,36001,,,RdmILFood,,Member submits entries for chances to win a IL Foodie Experience,2017-12-11 23:59:59,Chicago Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustIL""},{""code"":""SegCustWI""}]}"
23008,,2017-11-15 11:43:02,12001,2022-04-12 06:41:37,36001,,,RdmGAFood,,Member submits entries for chances to win a GA Foodie Experience,2017-12-11 23:59:59,Atlanta Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustNC""},{""code"":""SegCustGA""},{""code"":""SegCustSC""},{""code"":""SegCustAL""}]}"
23009,,2017-11-15 11:46:45,12001,2022-04-12 06:41:37,36001,,,RdmTNFood,,Member submits entries for chances to win a TN Foodie Experience,2017-12-11 23:59:59,Nashville Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustVA""},{""code"":""SegCustTN""},{""code"":""SegCustKY""},{""code"":""SegCustNC""}]}"
23010,,2017-11-15 11:49:35,12001,2022-04-12 06:41:37,36001,,,RdmCAFood,,Member submits entries for chances to win a SF Foodie Experience,2017-12-11 23:59:59,San Francisco Foodie Experience for Two,2017-11-15 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustAZ""},{""code"":""SegCustCA""},{""code"":""SegCustNV""}]}"
23011,,2017-11-15 11:51:36,12001,2022-04-12 06:41:37,36001,,,RdmBluCrd,,Member submits entries for chances to win 2 Blue Apron Gift Cards,2017-12-11 23:59:59,Two $60 Blue Apron Gift Cards,2017-11-15 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
23012,,2017-11-15 11:53:33,12001,2022-04-12 06:41:37,36001,,,RdmH9Head,,Member submits entries for chances to win BeoPlay Headphones,2017-12-11 23:59:59,BeoPlay H9 Active Noise Cancellation Headphones,2017-11-15 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
23013,,2017-11-15 11:56:00,12001,2022-04-12 06:41:37,36001,,,Rdm10Cook,,Member submits entries for chances to win a Cookware Set,2017-12-11 23:59:59,BrevilleThermal Pro Clad 10pc Cookware Set,2017-11-15 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
23014,,2017-11-15 11:59:03,12001,2022-04-12 06:41:37,36001,,,RdmGasCrd,,Member submits entries for chances to win a Exxon Mobil Gas Card,2017-12-11 23:59:59,$500 Exxon Mobil Gas Card,2017-11-15 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
23015,,2017-11-15 13:29:07,12001,2022-04-12 06:41:37,36001,,,SrvCCEarn,"And(questionnaire.code='SurvCoolCat', account.HomeCountryCode()='USA')","When a member takes a survey after watching ""Cool Cat"" video they are awarded 50 entries",2017-12-12 23:59:59,Cool Cat Survey Submission Earning Promo,2017-11-15 00:00:00,R,,CQ,,,"{""included"":[],""excluded"":[]}"
23952,,2017-11-16 13:48:38,12001,2022-04-12 06:41:37,36001,,,SrvCCTrig,"And(transaction.activityCode='VideoCoolCat', customer.CounterValue('VwCoolCat.CntCCat')=1, account.HomeCountryCode()='USA')","When a member watches brightcove ""Cool Cat"" they are prompted with a survey",2017-12-12 23:59:59,Cool Cat Trigger Survey Promo,2017-11-16 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
23953,,2017-11-16 14:14:13,12001,2022-04-12 06:41:37,36001,,,SrvP5Earn,"And(questionnaire.code='SurvP5Login', account.HomeCountryCode()='USA')","When the user submits the survey ""SurvP5Login"", they are awarded 50 entries.",2017-12-12 23:59:59,Site Feedback Survey Submission Earning Promo,2017-11-16 00:00:00,R,,CQ,,,"{""included"":[],""excluded"":[]}"
24002,,2017-11-16 14:29:45,12001,2022-04-12 06:41:37,36001,,,SrvP5Trig,"And(activity.code='LOGIN', customer.CounterValue('3rdLogin.Cnt3Login')>1, customer.CounterValue('CntP5Trig')<1, account.HomeCountryCode()='USA')","When the user has logged into the web app, present them with a survey to collect information regarding their experience with the web app.",2017-12-12 23:59:59,Site Feedback Survey Trigger Promo,2017-11-16 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
24952,,2017-11-27 15:21:22,6250,2022-04-12 06:41:37,36001,,,RdmTXFamEx,,Member submits entries for chances to win a Austin Family Experience Package,2017-12-27 23:59:59,Austin Family Experience,2017-11-27 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
24953,,2017-11-27 15:23:04,6250,2022-04-12 06:41:37,36001,,,RdmHikBoat,,Member submits entries for chances to win a Canyonlands Hiking and Boating Adventure Package,2017-12-27 23:59:59,Canyonlands Hiking and Boating Adventure ,2017-11-27 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
24954,,2017-11-27 15:26:24,6250,2022-04-12 06:41:37,36001,,,RdmWAAdv,,Member submits entries for chances to win a Create a Seattle Adventure Package,2017-12-27 23:59:59,Create a Seattle Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustWA""}]}"
24955,,2017-11-27 17:16:46,6250,2022-04-12 06:41:37,36001,,,RdmSCAdv,,Member submits entries for chances to win a Create a Charleston Adventure Package,2017-12-27 23:59:59,Create a Charleston Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustSC""}]}"
24956,,2017-11-27 17:18:27,6250,2022-04-12 06:41:37,36001,,,RdmFLAdv,,Member submits entries for chances to win a Create an Orlando Adventure Package,2017-12-27 23:59:59,Create an Orlando Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustFL""}]}"
24957,,2017-11-27 17:20:26,6250,2022-04-12 06:41:37,36001,,,RdmILAdv,,Member submits entries for chances to win a Create a Chicago Adventure Package,2017-12-27 23:59:59,Create a Chicago Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustIL""}]}"
24958,,2017-11-27 17:22:56,6250,2022-04-12 06:41:37,36001,,,RdmAEShow,,Member submits entries for chances to win a Amazon Echo Show,2017-12-27 23:59:59,Amazon Echo Show,2017-11-27 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
24959,,2017-11-27 17:24:35,6250,2022-04-12 06:41:37,36001,,,RdmDrone,,Member submits entries for chances to win a Parrot Bebop 2 Drone,2017-12-27 23:59:59,Parrot Bebop 2 Drone,2017-11-27 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
24960,,2017-11-27 17:26:00,6250,2022-04-12 06:41:37,36001,,,RdmNestHm,,Member submits entries for chances to win a Nest Home Package,2017-12-27 23:59:59,Nest Home Package,2017-11-27 00:00:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
24961,,2017-11-27 17:29:46,6250,2022-04-12 06:41:37,36001,,,RdmFandGif,,Member submits entries for chances to win a $125 Fandango Gift Card ,2017-12-27 23:59:59,$125 Fandango Gift Card ,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustRI""}]}"
25952,,2017-11-27 17:05:44,6250,2022-04-12 06:41:37,36001,,,RdmTXAdv,,Member submits entries for chances to win a Create a San Antonio Adventure Package,2017-12-27 23:59:59,Create a San Antonio Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustTX""}]}"
25953,,2017-11-27 17:07:33,6250,2022-04-12 06:41:37,36001,,,RdmMAAdv,,Member submits entries for chances to win a Create a Boston Adventure Package,2017-12-27 23:59:59,Create a Boston Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustMA""}]}"
25954,,2017-11-27 17:09:37,6250,2022-04-12 06:41:37,36001,,,RdmOHAdv,,Member submits entries for chances to win a Create a Cincinnati Adventure Package,2017-12-27 23:59:59,Create a Cincinnati Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustOH""}]}"
25955,,2017-11-27 17:11:58,6250,2022-04-12 06:41:37,36001,,,RdmCAAdv,,Member submits entries for chances to win a Create a San Diego Adventure Package,2017-12-27 23:59:59,Create a San Diego Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustCA""}]}"
25956,,2017-11-27 17:13:51,6250,2022-04-12 06:41:37,36001,,,RdmDCAdv,,Member submits entries for chances to win a Create a  Washington D.C. Adventure Package,2017-12-27 23:59:59,Create a  Washington D.C. Adventure,2017-11-27 00:00:00,R,,BR,,,"{""excluded"":[],""included"":[{""code"":""SegCustMD""},{""code"":""SegCustVA""},{""code"":""SegCustDC""}]}"
26952,,2017-11-28 09:51:35,12001,2022-04-12 06:41:37,36001,,,Vw500M,"And(transaction.activityCode='Video500M', account.HomeCountryCode()='USA')","When a member watches brightcove ""500 Miles"", they are awarded 20 entries",2017-12-12 23:59:59,500 Miles,2017-11-28 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
26953,,2017-11-28 12:02:22,12001,2022-04-12 06:41:37,36001,,,Srv500Trig,"And(transaction.activityCode='Video500M', customer.CounterValue('Vw500M.Cnt500M')=1, account.HomeCountryCode()='USA')","When a member watches the 500 Mile video for the first time, a survey will be invoked",2017-12-12 23:59:59,500 Miles Trigger Survey Promo,2017-11-28 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
27002,,2017-11-28 11:19:04,12001,2022-04-12 06:41:37,36001,,,VwVeggie,"And(transaction.activityCode='VideoVeggie', account.HomeCountryCode()='USA')","When a member watches brightcove ""Vegetable Steel"", they are awarded 20 entries",2017-12-12 23:59:59,Vegetable Steel,2017-11-28 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
27003,,2017-11-28 11:59:03,12001,2022-04-12 06:41:37,36001,,,Srv500Earn,"And(questionnaire.code='Surv500Miles', account.HomeCountryCode()='USA')","When a member takes a survey after watching ""500 Mile"" video they are awarded 50 entries",2017-12-12 23:59:59,500Miles Survey Submission Earning Promo,2017-11-28 10:00:00,R,,CQ,,,"{""included"":[],""excluded"":[]}"
27952,,2017-11-30 05:03:08,21051,2017-11-30 06:50:13,21051,2017-11-30 06:50:19,21051,TriviaEnt,questionnaire.type='T',,,Trivia Entries,2017-11-30 04:57:32,I,,CQ,,,"{""included"":[],""excluded"":[]}"
28952,,2017-12-12 15:01:17,6250,2022-04-12 06:41:37,36001,,,VWVideoFPE,"And(transaction.activityCode='VideoFPOE', account.HomeCountryCode()='USA')","When a member watches brightcove ""FordPass Overview"", set video watch completed flag",2018-12-31 23:59:59,VWVideoFPE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28953,,2017-12-12 15:02:42,6250,2022-04-12 06:41:37,36001,,,VWVideoCOE,"And(transaction.activityCode='VideoCOTE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Imagining the City of Tomorrow"", set watch complete flag",2018-12-31 23:59:59,VWVideoCOE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28954,,2017-12-12 15:03:52,6250,2022-04-12 06:41:37,36001,,,VWVideoHuE,"And(transaction.activityCode='VideoHubE', account.HomeCountryCode()='USA')","When a member watches brightcove ""FordHub NYC"", set watch completed flag",2018-12-31 23:59:59,VWVideoHuE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28955,,2017-12-12 15:06:18,6250,2022-04-12 06:41:37,36001,,,VWVideoUnE,"And(transaction.activityCode=('VideoUnstuckE'), account.HomeCountryCode()='USA')","When a member watches brightcove ""Ford Unstuck"", set the watch completed flag",2017-12-31 23:59:59,VWVideoUnE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28956,,2017-12-12 15:07:24,6250,2022-04-12 06:41:37,36001,,,VwVideoPwE,"And(transaction.activityCode='VideoMorePwrE', account.HomeCountryCode()='USA')","When a member watches brightcove ""More power. More tech"", set watch completed flag",2017-12-31 23:59:59,VwVideoPwE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28957,,2017-12-12 15:08:39,6250,2022-04-12 06:41:37,36001,,,VwVideoPrE,"And(transaction.activityCode='VideoReserveParkE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Wanna bet?"", set watch completed flag",2018-02-26 23:59:59,VwVideoPrE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28958,,2017-12-12 15:09:49,6250,2022-04-12 06:41:37,36001,,,VwVideoOuE,"And(transaction.activityCode='VideoLockedOutE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Love that app"", set watch completed flag",2018-02-26 23:59:59,VwVideoOuE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28959,,2017-12-12 15:11:10,6250,2022-04-12 06:41:37,36001,,,VwVideoOfE,"And(transaction.activityCode='VideoRFToffE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Ready for Takeoff"", set watch completed flag",2018-12-31 23:59:59,VwVideoOfE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28960,,2017-12-12 15:12:11,6250,2022-04-12 06:41:37,36001,,,VwVideoWaE,"And(transaction.activityCode='VideoWayParkE', account.HomeCountryCode()='USA')","When a member watches brightcove ""A Better Way to Park"", set watch completed flag",2018-12-31 23:59:59,VwVideoWaE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
28961,,2017-12-12 15:13:26,6250,2022-04-12 06:41:37,36001,,,VwVideoSmE,"And(transaction.activityCode='VideoSmoothE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Making your journey smoother"", set watch completed flag",2018-12-31 23:59:59,VwVideoSmE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
29952,,2017-12-12 15:15:58,6250,2022-04-12 06:41:37,36001,,,VwHubTouE,"And(transaction.activityCode='VidHubTourE', account.HomeCountryCode()='USA')","When a member watches brightcove ""FordHubs Instagram Tour"" set watch completed flag",2018-04-01 23:59:59,VwHubTouE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
29953,,2017-12-12 15:17:56,6250,2022-04-12 06:41:37,36001,,,VwCoolCaE,"And(transaction.activityCode='VideoCoolCatE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Cool Cat"", set watch completed flag",2018-05-20 23:59:59,VwCoolCaE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
29954,,2017-12-12 15:18:54,6250,2022-04-12 06:41:37,36001,,,VwHandsOfE,"And(transaction.activityCode='VideoHandsOffE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Hands Off"", set watch completed flag",2018-05-20 23:59:59,VwHandsOfE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
29955,,2017-12-12 15:19:51,6250,2022-04-12 06:41:37,36001,,,VwVeggieE,"And(transaction.activityCode='VideoVeggieE', account.HomeCountryCode()='USA')","When a member watches brightcove ""Vegetable Steel"", set watch completed flag",2018-12-31 23:59:59,VwVeggieE,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
29956,,2017-12-12 15:22:57,6250,2022-04-12 06:41:37,36001,,,Vw500ME,"And(transaction.activityCode='Video500ME', account.HomeCountryCode()='USA')","When a member watches brightcove ""500 Miles"", set watch completed flag",2018-05-20 23:59:59,Vw500ME,2017-12-13 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
31952,,2018-05-17 05:14:20,6450,2018-05-17 06:36:44,6450,2018-05-17 06:36:52,6450,JW_TEST,,,,jw to remove,2017-05-17 05:11:13,I,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
32952,,2018-06-19 02:54:20,24001,2021-02-22 04:02:56,33001,,,Corr_max,transaction.Points('USADEALER')>999999,Points correction maximum,,Corr_max,2018-07-06 00:00:00,R,,PC,,,"{""included"":[],""excluded"":[]}"
34001,,2018-07-05 14:58:31,,2021-02-22 04:33:30,33001,,,FPRFlag,"And(Not(IsEmpty(customer.address.zipCode)), customer.Attribute('FPRFlag')!='1', account.HomeCountryCode()='USA', transaction.rewardProgram='F',SegmentTextExists('AtlantaZipCodes', SubString(customer.address.zipCode, 0, 5)))",Promotion indicating if user is part of the FPR Pilot,,FPRFlag,2018-07-05 14:58:31,R,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
34051,,2018-07-05 14:58:32,,2022-09-08 06:42:55,36001,,,UDB feed,"And(transaction.earnCode='Service', transaction.rewardProgram='F')",Customer is being added to the FPR Pilot when making a service transaction.,,UDB feed,2018-10-02 00:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
34101,,2018-07-05 14:59:37,,2022-04-12 06:41:37,36001,,,FPRlogged,customer.Attribute('FPRloggedIn')!=TRUE,Flag indicating if user logged in after FPR launch.,,Capture login event in FPR (for migration purpose),2018-07-05 14:59:37,R,,AC,,,"{""included"":[],""excluded"":[]}"
34151,,2018-07-05 15:03:07,,2022-09-08 06:42:55,36001,,,PFS TT,"And(transaction.earnCode='DealerService', transaction.rewardProgram='F')",Pending Points are calculated as a transactions attribute - needed for Accounting. Transaction is set in T Temporary status. Also flags an increased number of Ford PFS transactions per single GUID for potential fraud.,,PFS Temporary Transaction,2018-08-27 22:48:54,A,,ER,,,"{""included"":[],""excluded"":[]}"
34201,,2018-07-05 15:03:43,,,,2018-07-05 15:29:37,,Corr_max,account.HomeCountryCode()='USA',Points correction maximum,,Corr_max,2018-09-01 00:00:00,I,,PC,,,"{""included"":[],""excluded"":[]}"
34301,,2018-07-05 15:21:53,,2021-02-22 03:38:31,33001,,,CntPartner,"And(customer.CounterValue('CntPartner.CntPartn1')<1, account.HomeCountryCode()='USA', transaction.rewardProgram='F')",This counter puts a flag on customer in dealer transaction. ,,CntPartner,2018-07-05 15:21:53,R,,ER,,,"{""included"":[],""excluded"":[]}"
34351,,2018-07-05 15:21:53,,2022-09-08 06:42:55,36001,,,CntPartn2,"And(transaction.appSourceCode='PFS', transaction.rewardProgram='F', Or(transaction.Points('USAFORD')!=0, IsEmpty(customer.Attribute('ProgramTCDate'))))",Rejects the transaction if dealer tries a correction for a member that has not accepted T&C or update of Ford point balance.,,Dealer's points correction rejection rules,2018-08-27 22:52:49,A,,PC,,,"{""included"":[],""excluded"":[]}"
34501,,2018-07-05 15:23:58,,2022-04-12 06:41:36,36001,,,CProfTCRet,"And(customer.CounterValue('CntProgTCD')<1, Not(IsEmpty(customer.Attribute('ProgramTCDate'))), account.HomeCountryCode()='USA')",Promotion is issuing points for FPR TC acceptance if complete profile was done before FPR TC were accepted.,,FPR Complete Profile points after TC acceptance,2018-07-05 15:23:58,R,,CA,,,"{""included"":[],""excluded"":[]}"
34952,,2018-07-23 02:28:34,24001,2021-02-22 04:33:50,33001,,,FPRFlagOAR,"And(OARMatchedGuidExists(customer.guid, 'pending'), account.HomeCountryCode()='USA', transaction.rewardProgram='F')",,,FPRFlagOAR,2018-07-23 02:27:17,R,,CR,,,"{""included"":[],""excluded"":[]}"
35952,,2018-08-23 08:57:52,24001,2021-02-22 04:40:43,33001,,,OARBonus,"And('MigrationBonus'=activity.code, Not(IsEmpty(customer.Attribute('ProgramTCDate'))))",Promotional: 1x per lifetime per member for OAR members that Accept FPR T&C's regardless of how many OAR accounts they have.,,OAR Bonus,2018-08-23 08:53:38,R,A,AC,,,"{""included"":[],""excluded"":[]}"
36952,,2018-09-07 08:52:07,21002,2022-04-12 06:41:37,36001,,,VehNoModem,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA')",Promotion issued points for non-modem vehicle purchase,,VehicleNoModem,2018-09-06 08:46:20,R,,AC,,,"{""included"":[],""excluded"":[]}"
37952,,2018-09-07 09:18:44,21002,2019-06-19 03:26:43,28001,2019-08-09 06:58:16,28001,VehModem,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA')",Promotion issued points when 4G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,Vehicle sale with modem,2018-09-06 09:09:47,I,,AC,,,"{""included"":[],""excluded"":[]}"
38952,,2018-09-19 06:43:55,24001,2022-09-08 06:42:55,36001,,,NOT_SUP_TR,,Promotion rejects all transaction which are not actually supported in Ford Program,,Not supported transactions,2018-09-27 00:00:00,A,,"AA, BE, BI, EA, LP, LT, M2, PF, PI, PL, PP, PQ, PR, RE",,,"{""included"":[],""excluded"":[]}"
39002,,2018-09-19 09:26:49,24001,2020-10-02 05:41:05,56001,,,TPT_check,"Or(transaction.Points('USAFORD')!=0, transaction.Points('USADEALER')!=0)",NO LONGER NEEDED (account home country logic removed)Promotion rejecting transactions with point types: USAFord and USADealer for members with account home country different than USA.,,Transaction Points Type extra check,2018-09-19 09:25:26,R,,"AC, CA, CR, ER, PC",,,"{""included"":[],""excluded"":[]}"
39003,,2018-09-19 10:12:09,24001,2022-04-12 06:41:37,36001,,,OARBonusPC,"And(Or(transaction.reasonCode='MS', transaction.reasonCode='MO', transaction.reasonCode='MF'), Not(IsEmpty(customer.Attribute('ProgramTCDate'))), customer.CounterValue('CntOARB')<1)",Promotional: 1x per lifetime per member for OAR members that Accept FPR T&C's regardless of how many OAR accounts they have.,,OARBonusPC,2018-09-19 10:11:00,R,,PC,,,"{""included"":[],""excluded"":[]}"
39952,,2018-09-21 06:44:38,6300,2022-04-12 06:41:37,36001,,,CA_check,"""11-09""=customer.birthdayMd",customer attribution check for MSL,2018-09-22 13:38:18,customer attribution check for MSL,2018-09-21 06:37:44,R,,CA,,,"{""included"":[],""excluded"":[]}"
40002,,2018-09-21 07:56:12,6300,2022-04-12 06:41:37,36001,,,QSTTest,,QSTTest,2018-09-22 14:55:18,QSTTest,2018-09-21 07:54:53,R,,CQ,,,"{""included"":[],""excluded"":[]}"
40952,,2018-11-22 03:57:10,28001,2022-04-12 06:41:37,36001,,,MobNotTest,"activity.code=""LOGIN""",,,Mobile Notification Test,2018-11-01 03:55:16,R,,AC,,,"{""included"":[],""excluded"":[]}"
42001,,2018-12-06 10:56:06,,,,,,FPRActImp,transaction.activityCode=TrnRuleParam('Activity code'),FPR Activity import template with activityCode and number of USAFORD points parameters,,FPR Activity import template,2018-12-06 10:56:06,I,,AC,,,"{""included"":[],""excluded"":[]}"
42952,,2018-12-18 03:34:57,24001,2019-08-09 06:53:35,28001,2019-08-09 06:53:40,28001,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', customer.Activity('EarnType', activity.code)='VehicleNew')",Promotion issued points when 4G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,Vehicle sale with Modem,2018-09-06 09:09:47,I,,AC,,,"{""included"":[],""excluded"":[]}"
43002,,2018-12-18 03:42:17,24001,2019-08-09 06:53:57,28001,2019-08-09 06:54:01,28001,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', customer.Activity('EarnType', activity.code)='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,Vehicle No Modem New,2018-09-06 08:46:20,I,,AC,,,"{""included"":[],""excluded"":[]}"
43952,,2019-01-24 09:32:04,28001,2022-09-08 06:42:55,36001,,,TMS_CPN_MC,"And(InList(transaction.activityCode,'TMS_CPN_TEST','CPN_MOCK_1'), transaction.appSourceCode='TMS')",,,A promotion that allows TMS to mock coupon issuance,2019-01-01 09:21:35,A,,AC,,,"{""included"":[],""excluded"":[]}"
44952,,2019-02-05 03:41:21,6300,2019-08-09 06:53:47,28001,2019-08-09 06:53:52,28001,ModAcNotif,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', customer.Activity('EarnType', activity.code)='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,Vehicle sale with Modem Activation Notifications promotion,2018-09-06 09:09:47,I,,AC,,,"{""included"":[],""excluded"":[]}"
45952,,2019-02-12 02:22:07,28001,2022-09-08 06:42:55,36001,,,TMS_CPN_2,transaction.activityCode='CPN_ISS_MLT',,,A promotion that allows issuance of different coupons,2019-01-01 09:21:35,A,,AC,,,"{""included"":[],""excluded"":[]}"
46952,,2019-02-12 04:17:02,33001,2019-08-09 07:20:32,28001,2019-08-09 07:20:36,28001,Notif,transaction.activityCode='VIDEOT',,,Notification,2019-02-11 04:09:44,I,,AC,,,"{""included"":[],""excluded"":[]}"
47952,,2019-02-19 05:09:57,28001,2022-04-12 06:41:37,36001,,,emailTest,transaction.transactionSourceSystem='TWPostMan',,,emailTestByTW,2019-02-01 05:08:13,R,,CR,,,"{""included"":[],""excluded"":[]}"
48952,,2019-02-20 08:03:58,28001,2022-04-12 06:41:37,36001,,,InActPrt,,,,Inactive partner for activity,2019-02-01 08:01:59,R,,AC,,,"{""included"":[],""excluded"":[]}"
49952,,2019-03-14 07:09:37,23001,2020-09-11 11:12:45,28001,2020-12-09 08:11:11,28001,EvMiles,,test ,,my tests RB,2019-03-13 07:09:03,I,,"AC, ER, MA, TE",,,"{""included"":[],""excluded"":[]}"
49953,,2019-03-14 08:23:51,23001,2020-09-11 11:12:45,28001,2020-12-09 06:14:34,28001,abcclone,,test ,,my tests RB_clone,2019-03-13 07:09:03,I,,"AC, ER, MA, TE",,,"{""included"":[],""excluded"":[]}"
50952,,2019-03-15 03:50:06,24001,2020-04-07 13:27:49,43001,2020-04-07 13:27:55,43001,TotalTrips,,,,Total Trips Number counters,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50953,,2019-03-15 06:10:46,24001,2020-04-07 10:05:40,43001,2020-04-07 10:05:50,43001,KML daily,,,,KML daily counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50954,,2019-03-15 06:13:59,24001,2020-04-07 13:24:11,43001,2020-04-07 13:24:20,43001,fuelSaved,,,,Fuel saved daily counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50955,,2019-03-15 06:25:28,24001,2020-04-06 14:27:40,43001,2020-04-06 14:27:46,43001,DT over 5,"ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8",,,Daily trips number over 5 miles,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50956,,2019-03-15 06:56:04,24001,2020-12-09 07:42:16,28001,2020-12-09 07:53:30,28001,DEdailyAV,,,,Driving Efficiency daily average counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50957,,2019-03-15 07:52:28,24001,2020-04-07 10:10:33,43001,2020-04-07 10:10:39,43001,MilesRegD,,,,Miles regenerated daily counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50958,,2019-03-15 07:55:44,24001,2020-12-14 04:44:38,28001,2020-12-14 04:44:43,28001,MilesRegAV,,,,Miles regenerated average counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50959,,2019-03-15 08:00:06,24001,2020-04-07 09:55:49,43001,2020-04-07 09:56:00,43001,ELKMdaily,,,,Electric kilometers per day counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
50960,,2019-03-15 08:03:01,24001,2020-04-07 13:30:38,43001,2020-04-07 13:30:44,43001,TotalKMday,,,,Total kilometers per day counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51002,,2019-03-15 06:01:30,24001,2020-04-06 14:30:22,43001,2020-04-06 14:30:36,43001,DailyTrips,,,,Daily Trips Number counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51003,,2019-03-15 06:29:00,24001,2020-04-06 11:38:17,43001,2020-04-06 11:38:27,43001,BS daily,,,,Brake score daily sum counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51004,,2019-03-15 06:47:04,24001,2020-12-09 07:12:47,28001,2020-12-09 07:12:56,28001,BSdailyAV,,,,Brake score daily average counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51005,,2019-03-15 06:54:57,24001,2020-04-06 14:24:15,43001,2020-04-06 14:24:22,43001,DEdailyS,,,,Driving Efficiency daily sum counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51006,,2019-03-15 07:41:05,24001,2020-04-06 14:18:53,43001,2020-04-06 14:19:04,43001,CO2savings,,,,CO2 savings daily counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51007,,2019-03-15 07:46:56,24001,2020-12-09 07:14:41,28001,2020-12-09 07:14:46,28001,CO2savAVG,,,,CO2 savings average counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
51952,,2019-03-25 04:30:49,24001,2019-03-25 04:31:55,24001,2019-03-25 04:32:00,24001,BrakeScore,,,,Brake Score,2018-03-25 04:29:49,I,V,TE,,,"{""included"":[],""excluded"":[]}"
51953,,2019-03-25 06:06:19,24001,2019-03-25 06:13:55,24001,2019-03-25 06:14:02,24001,BSCalc,,,,Brake Score Calc,2018-03-25 06:00:10,I,,TE,,,"{""included"":[],""excluded"":[]}"
52002,,2019-03-25 04:42:50,24001,2020-12-14 07:17:32,28001,2020-12-14 07:17:46,28001,BrakeScore,"And(Or(Not(account.HasBadge('Brake Score 1')), Not(account.HasBadge('Brake Score 2')), Not(account.HasBadge('Brake Score 3'))), account.BadgeEnroll('Challenge'), Or(Mod(account.CounterGroupValue('EVTTN'), 10)!=0, And(Mod(account.CounterGroupValue('EVTTN'), 10)=0, Div(account.CounterGroupLastChangesValue('EVBSDS', 10), 10)>80)), DateDiff(account.Attribute('BrakeScoreCalc'), Sysdate(), 'DAY')>=14, Div(account.CounterGroupChangeValue('EVBSDS', DateAdd(Sysdate(), 'DAY', -14), Sysdate()), account.CounterGroupChangeValue('EVTTN', DateAdd(Sysdate(), 'DAY', -14), Sysdate()))>80, account.CounterGroupChangeValue('EVTTN', DateAdd(Sysdate(), 'DAY', -14), Sysdate())>=10)",,,Brake Score,2018-03-25 04:42:14,I,V,TE,,,"{""included"":[],""excluded"":[]}"
52952,,2019-04-11 04:34:59,28001,2022-04-12 06:41:37,36001,,,DemoTier,"And(activity.code='MockSale', transaction.appSourceCode=""PostmanTW"")",,,DemoForTiersTW,2019-01-01 04:25:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
53952,,2019-04-11 04:40:34,28001,2019-04-29 05:52:36,28001,2019-04-29 05:52:48,28001,DemoTrReg,,,,DemoForTiersForRegistration,2019-01-01 04:25:00,I,,CR,,,"{""included"":[],""excluded"":[]}"
53953,,2019-04-15 09:01:17,28001,2022-04-12 06:41:37,36001,,,ActAll,transaction.appSourceCode='PostmanTW',,,Activityies All TW,2019-04-15 08:59:49,R,,AC,,,"{""included"":[],""excluded"":[]}"
53954,,2019-04-16 05:34:34,24001,2020-04-06 14:35:16,43001,2020-04-06 14:35:29,43001,DrivEffBdg,"And(Or(Not(account.HasBadge('Driving Efficiency 1')), Not(account.HasBadge('Driving Efficiency 2')), Not(account.HasBadge('Driving Efficiency 3'))), account.BadgeEnroll('Challenge'), Or(Mod(account.CounterGroupValue('EVTTN'), 10)!=0, And(Mod(account.CounterGroupValue('EVTTN'), 10)=0, Div(account.CounterGroupLastChangesValue('EVDEDS', 10), 10)>60)), DateDiff(account.Attribute('DrivingEfficiencyCalc'), Sysdate(), 'DAY')>=14, Div(account.CounterGroupChangeValue('EVDEDS', DateAdd(Sysdate(), 'DAY', -14), Sysdate()), account.CounterGroupChangeValue('EVTTN', DateAdd(Sysdate(), 'DAY', -14), Sysdate()))>60, account.CounterGroupChangeValue('EVTTN', DateAdd(Sysdate(), 'DAY', -14), Sysdate())>=10)",,,Driving Efficiency,2019-04-16 05:30:34,I,V,TE,,,"{""included"":[],""excluded"":[]}"
54952,,2019-04-16 09:05:24,24001,2020-04-06 14:12:33,43001,2020-04-06 14:12:41,43001,CO2SavBdg,,,,CO2 Savings Badge,2019-04-16 09:02:43,I,V,TE,,,"{""included"":[],""excluded"":[]}"
54953,,2019-04-17 10:21:56,24001,2020-04-06 14:06:09,43001,2020-04-06 14:06:23,43001,CO2SAVTot,,,,CO2 savings total counter,2019-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
54954,,2019-04-18 08:52:58,24001,2019-04-18 09:41:09,24001,2019-04-18 09:58:02,24001,BrakeScCN,"And(Mod(account.CounterGroupValue('EVTTN'), 10)=0, Div(account.CounterGroupLastChangesValue('EVBSDS', 10), 10)<=80, DateDiff(account.Attribute('BrkScrCNDate'), Sysdate(), 'DAY')>1)",,,Brake Score coaching notifications,2019-04-18 06:41:23,I,V,TE,,,"{""included"":[],""excluded"":[]}"
54956,,2019-04-18 10:01:14,24001,2020-04-06 10:49:11,43001,2020-04-06 10:49:20,43001,BrakeScCN,"And(account.CounterGroupValue('EVTTN')>900, Mod(account.CounterGroupValue('EVTTN'), 1000)=0, Div(account.CounterGroupLastChangesValue('EVBSDS', 10), 1000)<=80, Or(IsEmpty(account.Attribute('BrkScrCNDateTime')), DateDiff(ToDate(account.Attribute('BrkScrCNDateTime')), Sysdate(), 'HOUR')>=24), account.Attribute('VehicleMake')='Ford')",,,Brake Score coaching notifications,2019-04-18 09:58:37,I,,TE,,,"{""included"":[],""excluded"":[]}"
55952,,2019-04-18 06:51:27,24001,2019-04-18 09:34:14,24001,2019-04-18 09:34:28,24001,BrakeScCN,"And(Mod(account.CounterGroupValue('EVTTN'), 10)=0, Div(account.CounterGroupLastChangesValue('EVBSDS', 10), 10)<=80, DateDiff(account.Attribute('BrkScrCNDate'), Sysdate(), 'DAY')>1)",,,Brake Score coaching notifications,2019-04-18 06:41:23,I,V,TE,,,"{""included"":[],""excluded"":[]}"
56952,,2019-04-29 05:54:01,28001,2022-09-08 06:42:55,36001,,,LARRegRec,transaction.rewardProgram='L',,,LAR Registration Recognition,2019-04-01 05:52:53,A,,CR,,,"{""included"":[],""excluded"":[]}"
57002,,2019-04-29 06:05:55,28001,2019-08-09 06:51:51,28001,2019-08-09 06:51:56,28001,LARModem,"And(transaction.activityCode='LincolnSaleWithModem', transaction.rewardProgram='L', account.HomeCountryCode()='USA', customer.Activity('EarnType', activity.code)='VehicleNew')",Promotion issued points when modem of a Lincoln vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,LAR Vehicle sale with Modem,2019-04-01 05:55:41,I,,AC,,,"{""included"":[],""excluded"":[]}"
57003,,2019-04-29 06:07:29,28001,2022-09-08 06:42:55,36001,,,1STTCStore,"And(Not(IsEmpty(customer.Attribute('ProgramTCDate'))), Or(IsEmpty(customer.Attribute('FirstTCDate')),customer.Attribute('ProgramTCDate')<customer.Attribute('FirstTCDate')))",,,Promotion that stores original date of TC's acceptance,2019-03-01 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
57952,,2019-05-16 08:13:45,28001,2022-04-12 06:41:37,36001,,,PtsRwdPrg,"Or(And(transaction.rewardProgram='F', 0!=Add(transaction.Points('USALINCOLN'), transaction.Points('USADEALERL'))), And(transaction.rewardProgram='L', 0!=Add(transaction.Points('USAFORD'), transaction.Points('USADEALER'))))",,,Temporary business rule to block points from wrong program,2018-01-01 08:08:00,R,,"AA, AC, BR, CA, CR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
58952,,2019-05-17 06:05:46,33001,2019-12-05 06:02:41,28001,2019-12-05 06:02:45,28001,BM_TEST,,,,bm test,2019-05-01 06:04:44,I,,ER,,,"{""included"":[],""excluded"":[]}"
59952,,2019-05-21 06:43:42,28001,2022-04-12 06:41:37,36001,,,123,,,,3213,2019-05-21 06:40:08,R,,ER,,,"{""included"":[],""excluded"":[]}"
60952,,2019-05-31 08:38:15,21002,2019-08-09 06:54:15,28001,2019-08-09 06:54:19,28001,LARSaleRec,"And(Or(transaction.activityCode='LincolnSaleWithModem', transaction.activityCode='LincolnSaleNoModem'), transaction.rewardProgram='L', account.HomeCountryCode()='USA', Or(Not(And('RESERVE'=customer.Activity('TrimLevel', transaction.activityCode), customer.Recognition('LAR.R'), Not(IsEmpty(customer.RecognitionEndDate('LAR.R'))))), Not(And('BLACK LABEL'=customer.Activity('TrimLevel', transaction.activityCode), customer.Recognition('LAR.B'), Not(IsEmpty(customer.RecognitionEndDate('LAR.B')))))))",Recognition tier assignment based on the trim level in the vehicle sale feeds.,,LAR Vehicle Sale w/ modem Recognition,2019-05-01 08:35:52,I,,AC,,,"{""included"":[],""excluded"":[]}"
60953,,2019-05-31 09:35:56,21002,2022-09-08 06:42:55,36001,,,CulBenefit,"And(activity.code='CulinaryBenefit', transaction.rewardProgram='L')",,,Culinary Benefit Redemption,2019-06-03 08:28:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
60954,,2019-06-02 07:04:57,28001,2021-02-22 04:45:16,33001,,,PtsPrtVali,"And(transaction.pointsText!='0', IsEmpty(transaction.partnerId))",A technical business rule that validates that partner is non-empty for point issuing transactions.,,Partner non-empty for Point issuing,2019-01-01 06:58:00,R,,BR,,,"{""included"":[],""excluded"":[]}"
61952,,2019-06-02 07:04:11,28001,2019-06-02 07:04:31,28001,2019-06-02 07:04:41,28001,PtsPrtVali,"And(transaction.pointsText!='0', IsEmpty(transaction.partnerId))",A technical business rule that validates that partner is non-empty for point issuing transactions.,,Partner non-empty for Point issuing,2019-01-01 06:58:00,I,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
62952,,2019-06-07 06:59:42,24001,2022-02-07 03:36:30,75056,,,ChargeEV5S,,,,Charge event over 5s,2019-05-21 06:43:08,A,,CE,,,"{""included"":[],""excluded"":[]}"
62953,,2019-06-07 06:59:42,24001,2022-02-07 03:36:30,75056,,,ChRegUpdt,"And(Mod(ToInteger(account.CounterValue('ChargeEV5S.cntCHEV5S')), 10)=0, Not(Or(IsEmpty(JSONValue(event.eventContent, 'chargeCountry')), JSONValue(event.eventContent, 'chargeCountry')='null', Size(JSONValue(event.eventContent, 'chargeCountry'))!=3)))",This is promotion which updates region and subregion attributes after every 10th charge.,,Charge region update ,2019-08-25 19:00:00,A,,CE,,,"{""included"":[],""excluded"":[]}"
63002,,2019-06-07 06:59:42,24001,2022-02-07 03:36:30,75056,,,mvpChall,"And(account.HasBadge('BrakeScore1'), account.HasBadge(""BrakeScore2""), account.HasBadge(""BrakeScore3""), account.HasBadge(""DrivingEfficiency1""), account.HasBadge(""DrivingEfficiency2""), account.HasBadge(""DrivingEfficiency3""),  account.HasBadge(""CO2savings1""), account.HasBadge(""CO2savings2""), account.HasBadge(""CO2savings3""), account.HasBadge(""CO2savings4""), account.HasBadge(""CO2savings5""), account.HasBadge(""CO2savings6""), account.HasBadge(""CO2savings7""), account.HasBadge(""ElectricPowerUse1""), account.HasBadge(""ElectricPowerUse2""), account.HasBadge(""ElectricPowerUse3""))",,,mvpChall,2019-05-01 08:04:59,A,,TE,,,"{""included"":[],""excluded"":[]}"
63003,,2019-06-07 06:59:42,24001,2022-02-07 03:36:30,75056,,,startDay1,"And(IsEmpty(account.Attribute('startDay1')), If(Or(IsEmpty(JSONValue(event.eventContent, 'vehicle')), JSONValue(event.eventContent, 'vehicle')='null'), And(vin.vinYear>='2020', vin.fuelType='I'), And(JSONValue(event.eventContent, 'vehicle.year')>='2020', JSONValue(event.eventContent, 'vehicle.fuelType')='I')))",,,startDay1,2019-01-01 03:59:00,A,,AO,,,"{""included"":[],""excluded"":[]}"
63004,,2019-06-07 06:59:42,24001,2022-02-07 03:36:30,75056,,,PHEVBdg,"And(account.Attribute('VehicleModel')!='Kuga',ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8, Or(Not(account.HasBadge('ElectricPowerUse1')), Not(account.HasBadge('ElectricPowerUse2')), Not(account.HasBadge('ElectricPowerUse3'))), InList(account.Attribute('VehicleMake'), 'Ford', 'Lincoln'))",,,Electric Power Use Badges,2019-05-28 03:56:08,A,,TE,,,"{""included"":[],""excluded"":[]}"
63006,,2019-06-12 07:44:54,28001,2019-08-09 06:54:24,28001,2019-08-09 06:54:29,28001,LARModAct,"And(transaction.activityCode='LincolnSaleWithModem', customer.Activity('ActivationDate', 'LincolnSaleWithModem')=ToDate('01/01/0001', 'dd/MM/yyyy'), transaction.rewardProgram='L', account.HomeCountryCode()='USA', Or(customer.Activity('TrimLevel', 'LincolnSaleWithModem')='STANDARD', customer.Activity('TrimLevel', 'LincolnSaleWithModem')='RESERVE', customer.Activity('TrimLevel', 'LincolnSaleWithModem')='BLACK LABEL'), customer.Activity('EarnType', activity.code)='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,LAR Modem Activation NotificationVehicle sale with Modem Activation Notifications promotion_clone,2019-05-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
63007,,2019-06-12 07:49:29,28001,2022-09-08 06:42:55,36001,,,UDB_LAR,"And(transaction.earnCode='Service', transaction.rewardProgram='L')",Points are issued for Dealer Service transactions.,,UDB LAR feed,2019-06-03 00:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
63952,,2019-06-19 03:25:24,28001,2019-08-12 06:09:37,28001,2019-08-12 06:09:41,28001,TrnAtrAct,,,,Set Act Trn Attributes,2019-01-01 03:05:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
63953,,2019-06-19 06:18:19,28001,2022-09-08 06:42:55,36001,,,LARPtsRec,"And(transaction.rewardProgram='L', Add(transaction.Points('USADEALERL'), transaction.Points('USALINCOLN'))>0)",,,LAR Recognition based on points,2019-06-02 17:00:00,A,,"AC, BE, CA, CR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
64952,,2019-06-28 07:45:10,28001,2019-08-12 06:09:48,28001,2019-08-12 06:09:56,28001,FPRCPOPts,"And(transaction.rewardProgram='F', account.HomeCountryCode()='USA', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), customer.Activity('EarnType', activity.code)='VehicleCPO'))",Promotion issued points for CPO vehicle purchase in FPR,,FPR CPO points,2019-05-31 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
65952,,2019-07-12 01:58:35,33001,2020-09-11 11:12:45,28001,2020-12-14 06:15:13,28001,test,,,,test,2019-06-24 06:11:21,I,,TE,,,"{""included"":[],""excluded"":[]}"
66002,,2019-07-12 07:13:45,28001,2021-02-22 04:36:27,33001,,,JunBonus,transaction.activityCode='JuneDoubleBonus',,,June Bonus Double Points,2019-07-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
66952,,2019-08-09 06:52:07,28001,2019-08-09 06:54:06,28001,2019-08-09 06:54:10,28001,LARModem,"And(transaction.activityCode='LincolnSaleWithModem', transaction.rewardProgram='L', account.HomeCountryCode()='USA', customer.Activity('EarnType', 'LincolnSaleWithModem')=""VehicleNew"")",Promotion issued points when modem of a Lincoln vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,LAR Vehicle sale with Modem,2019-06-03 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
66953,,2019-08-09 06:58:32,28001,2019-08-12 06:10:20,28001,2019-08-12 06:10:24,28001,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', customer.Activity('EarnType', 'SaleNoModem')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,Vehicle No Modem New,2019-01-15 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
66954,,2019-08-09 06:58:33,28001,2019-08-12 06:10:02,28001,2019-08-12 06:10:05,28001,LARModAct,"And(transaction.activityCode='LincolnSaleWithModem', customer.Activity('ActivationDate', 'LincolnSaleWithModem')=ToDate('01/01/0001', 'dd/MM/yyyy'), transaction.rewardProgram='L', account.HomeCountryCode()='USA', Or(customer.Activity('TrimLevel', 'LincolnSaleWithModem')='STANDARD', customer.Activity('TrimLevel', 'LincolnSaleWithModem')='RESERVE', customer.Activity('TrimLevel', 'LincolnSaleWithModem')='BLACK LABEL'), customer.Activity('EarnType', activity.code)='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,LAR Modem Activation Notification,2019-06-03 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
66955,,2019-08-09 06:58:33,28001,2019-08-12 06:10:11,28001,2019-08-12 06:10:15,28001,LARModem,"And(transaction.activityCode='LincolnSaleWithModem', transaction.rewardProgram='L', account.HomeCountryCode()='USA', customer.Activity('EarnType', 'LincolnSaleWithModem')=""VehicleNew"")",Promotion issued points when modem of a Lincoln vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,LAR Vehicle sale with Modem,2019-06-03 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67002,,2019-08-09 06:58:31,28001,2019-08-12 06:10:39,28001,2019-08-12 06:10:43,28001,ModAcNotif,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', customer.Activity('EarnType', activity.code)='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,Vehicle sale with Modem Activation Notifications promotion,2019-01-15 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67003,,2019-08-09 06:58:32,28001,2019-08-12 06:10:30,28001,2019-08-12 06:10:33,28001,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', customer.Activity('EarnType', 'SaleWithModem')=""VehicleNew"")",Promotion issued points when 4G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,Vehicle sale with Modem,2019-01-15 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67004,,2019-08-09 06:58:33,28001,2022-04-12 06:41:37,36001,,,VehModem,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA')",Promotion issued points when 4G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,2019-01-14 23:59:59,Vehicle sale with Modem,2018-10-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
67005,,2019-08-09 06:58:33,28001,2019-08-12 06:10:48,28001,2019-08-12 06:10:53,28001,LARSaleRec,"And(Or(transaction.activityCode='LincolnSaleWithModem', transaction.activityCode='LincolnSaleNoModem'), transaction.rewardProgram='L', account.HomeCountryCode()='USA', Or(Not(And('RESERVE'=customer.Activity('TrimLevel', transaction.activityCode), customer.Recognition('LAR.R'), Not(IsEmpty(customer.RecognitionEndDate('LAR.R'))))), Not(And('BLACK LABEL'=customer.Activity('TrimLevel', transaction.activityCode), customer.Recognition('LAR.B'), Not(IsEmpty(customer.RecognitionEndDate('LAR.B')))))))",Recognition tier assignment based on the trim level in the vehicle sale feeds.,,LAR Vehicle Sale Recognition,2019-06-03 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67952,,2019-08-12 06:11:17,28001,2019-08-12 07:13:58,28001,2019-08-12 07:14:01,28001,LARModem,"And(transaction.Attribute('EarnType')='VehicleNew', transaction.activityCode='LincolnSaleWithModem', transaction.rewardProgram='L', account.HomeCountryCode()='USA', transaction.Attribute('ModemType')='4G', ToNumber(transaction.Attribute('ModelYear'))>=2020)",Promotion issued points when modem of a Lincoln vehicle is activated within 60 days of the vehicle purchase and the vehicle is new. 1,,LAR Vehicle sale with Modem,2019-03-31 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67953,,2019-08-12 06:11:19,28001,2019-08-12 07:14:23,28001,2019-08-12 07:14:27,28001,ModAcNotif,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', transaction.Attribute('EarnType')='VehicleNew', transaction.Attribute('ModemType')='4G', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'))",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,Vehicle sale with Modem Activation Notifications promotion,2019-01-14 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67954,,2019-08-12 06:13:47,28001,2019-08-12 07:14:34,28001,2019-08-12 07:14:38,28001,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', transaction.Attribute('ModemType')='4G', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points when 4G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,Vehicle sale with Modem,2019-01-15 06:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67955,,2019-08-12 06:13:47,28001,2019-08-12 07:14:43,28001,2019-08-12 07:14:46,28001,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', account.HomeCountryCode()='USA', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,Vehicle No Modem New,2019-01-14 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67956,,2019-08-12 06:13:47,28001,2019-08-12 07:14:09,28001,2019-08-12 07:14:13,28001,LARSaleRec,"And(Or(transaction.activityCode='LincolnSaleWithModem', transaction.activityCode='LincolnSaleNoModem'), transaction.rewardProgram='L', account.HomeCountryCode()='USA', Or(Not(And(transaction.Attribute('TrimLevel')='RESERVE', customer.Recognition('LAR.R'), Not(IsEmpty(customer.RecognitionEndDate('LAR.R'))))), Not(And(transaction.Attribute('TrimLevel')='BLACK LABEL', customer.Recognition('LAR.B'), Not(IsEmpty(customer.RecognitionEndDate('LAR.B')))))))",Recognition tier assignment based on the trim level in the vehicle sale feeds.,,LAR Vehicle Sale w/ modem Recognition,2019-04-30 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67957,,2019-08-12 07:18:21,28001,2021-03-16 12:18:44,36001,2021-03-16 12:18:51,36001,LARModAct,"And(transaction.activityCode='LincolnSaleWithModem', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'), transaction.rewardProgram='L', Or(transaction.Attribute('TrimLevel')='STANDARD', transaction.Attribute('TrimLevel')='RESERVE', transaction.Attribute('TrimLevel')='BLACK LABEL'), transaction.Attribute('EarnType')='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,LAR Modem Activation Notification,2019-06-02 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
67958,,2019-08-12 07:18:21,28001,2022-04-12 06:41:37,36001,,,FPRCPOPts,"And(transaction.rewardProgram='F', account.HomeCountryCode()='USA', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), transaction.Attribute('EarnType')='VehicleCPO'))",Promotion issued points for CPO vehicle purchase in FPR,2019-11-13 23:59:59,FPR CPO points,2019-07-31 17:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
67959,,2019-08-12 07:18:21,28001,2022-09-08 06:42:55,36001,,,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points when sync connect modem is activated 3 days before up to 60 days after the vehicle purchase date and the vehicle is new.,,FPR Vehicle sale with Modem - NEW,2019-01-15 06:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
67960,,2019-08-12 07:18:22,28001,2022-09-08 06:42:55,36001,,,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,Vehicle No Modem New,2019-01-14 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
67961,,2019-08-12 07:18:22,28001,2022-09-08 06:42:55,36001,,,LARSaleRec,"And(Or(transaction.activityCode='LincolnSaleWithModem', transaction.activityCode='LincolnSaleNoModem'), transaction.rewardProgram='L', Or(Not(And(transaction.Attribute('TrimLevel')='RESERVE', customer.Recognition('LAR.R'), Not(IsEmpty(customer.RecognitionEndDate('LAR.R'))))), Not(And(transaction.Attribute('TrimLevel')='BLACK LABEL', customer.Recognition('LAR.B'), Not(IsEmpty(customer.RecognitionEndDate('LAR.B')))))))",Recognition tier assignment based on the trim level in the vehicle sale feeds.,,LAR Vehicle Sale w/ modem Recognition,2019-04-30 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
68002,,2019-08-12 06:11:18,28001,2019-08-12 07:13:49,28001,2019-08-12 07:13:54,28001,LARModAct,"And(transaction.activityCode='LincolnSaleWithModem', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'), transaction.rewardProgram='L', account.HomeCountryCode()='USA', Or(transaction.Attribute('TrimLevel')='STANDARD', transaction.Attribute('TrimLevel')='RESERVE', transaction.Attribute('TrimLevel')='BLACK LABEL'), transaction.Attribute('EarnType')='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,LAR Modem Activation Notification,2019-06-02 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
68003,,2019-08-12 06:11:19,28001,2019-08-12 07:13:40,28001,2019-08-12 07:13:44,28001,FPRCPOPts,"And(transaction.rewardProgram='F', account.HomeCountryCode()='USA', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), transaction.Attribute('EarnType')='VehicleCPO'))",Promotion issued points for CPO vehicle purchase in FPR,,FPR CPO points,2019-07-31 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
68004,,2019-08-12 06:13:46,28001,2019-08-12 07:14:56,28001,2019-08-12 07:15:00,28001,TrnAtrAct,"InList(activity.code, 'LincolnSaleWithModem', 'LincolnSaleNoModem', 'SaleWithModem', 'SaleNoModem')",Please consult Comarch team before modifying/disabling.,,Sets Transaction Attributes for Activity,2017-12-31 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
68005,,2019-08-12 06:13:47,28001,2019-08-12 07:14:50,28001,2019-08-12 07:14:53,28001,SaleValid,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem')",,,Sale Validation,2018-09-30 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
68006,,2019-08-12 06:13:47,28001,2019-08-12 07:14:15,28001,2019-08-12 07:14:20,28001,MdmNw3GFPR,"And(transaction.activityCode='SaleWithModem', transaction.Attribute('ModemType')='3G', transaction.rewardProgram='F', account.HomeCountryCode()='USA', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points when 3G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,Vehicle sale with 3G Modem ,2018-09-30 17:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
68007,,2019-08-12 07:18:21,28001,2022-09-08 06:42:55,36001,,,LARModem,"And(transaction.Attribute('EarnType')='VehicleNew', transaction.activityCode='LincolnSaleWithModem', transaction.rewardProgram='L',  ToNumber(transaction.Attribute('ModelYear'))>=2020)",Promotion issued points when a Lincoln vehicle modem is activated 3 days before up to 60 days after the vehicle purchase date and the vehicle is new.,,LAR Vehicle sale with Modem,2019-03-31 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
68008,,2019-08-12 07:18:21,28001,2022-09-08 06:42:55,36001,,,ModAcNotif,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'))",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,FPR Vehicle sale with Modem Activation Notifications promotion,2019-01-14 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
68009,,2019-08-12 07:18:21,28001,2022-04-12 06:41:36,36001,,,TrnAtrAct,,Please consult Comarch team before modifying/disabling.,,Set Act Trn Attributes,2019-01-01 03:05:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
68010,,2019-08-12 07:18:22,28001,2022-09-08 06:42:55,36001,,,SaleValid,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem')",,,Sale Validation,2018-09-30 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
68011,,2019-08-12 07:18:22,28001,2022-04-12 06:41:37,36001,,,MdmNw3GFPR,"And(transaction.activityCode='SaleWithModem', transaction.Attribute('ModemType')='3G', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points when 3G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,Vehicle sale with 3G Modem ,2018-09-30 17:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
68955,,2019-08-29 07:02:17,28001,2022-04-12 06:41:37,36001,,,66CoPilot,"And(customer.rewardProgram='F', InList(TrnRuleParam('ParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('ICEFuelTypes'), vin.fuelType), Sub(vin.odometerCurrent, vin.odometerInitial)>=TrnRuleParam('MilestoneThreshold'), Sub(vin.odometerCurrent, vin.odometerInitial)<TrnRuleParam('NextMilestoneThreshold'))",,,Route 66 digital coach,2019-07-01 12:41:42,R,,VU,,,"{""included"":[],""excluded"":[]}"
68956,,2019-08-29 07:03:41,28001,2022-04-12 06:41:37,36001,,,CoPilotGD,"And(customer.rewardProgram='F', InList(TrnRuleParam('ParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('ICEFuelTypes'), vin.fuelType), Sub(vin.odometerCurrent, vin.odometerInitial)>=TrnRuleParam('MilestoneThreshold'), Sub(vin.odometerCurrent, vin.odometerInitial)<TrnRuleParam('NextMilestoneThreshold'))",,,Gobi Desert digital coach,2019-07-01 12:41:42,R,,VU,,,"{""included"":[],""excluded"":[]}"
69952,,2019-08-29 06:34:07,28001,2022-04-12 06:41:37,36001,,,ISSCoPilot,"And(customer.rewardProgram='F', InList(TrnRuleParam('ParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('ICEFuelTypes'), vin.fuelType), Sub(vin.odometerCurrent, vin.odometerInitial)>=TrnRuleParam('MilestoneThreshold'), Sub(vin.odometerCurrent, vin.odometerInitial)<TrnRuleParam('NextMilestoneThreshold'))",,,ISS digital coach,2019-07-01 12:41:42,R,,VU,,,"{""included"":[],""excluded"":[]}"
70952,,2019-10-03 05:10:12,28001,2022-04-12 06:41:37,36001,,,FPRSprNot,"And(InList(transaction.reasonCode, 'FPR_DTT', 'FPR_JUL19', 'FPR_SEPT19', 'LSWEEP'), transaction.Points('USAFORD')>0, transaction.rewardProgram='F', account.HomeCountryCode()='USA')",,,FPR Generaic Smart Card to inform about points earned,2019-10-01 00:00:00,R,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
71952,,2019-10-04 04:45:36,28001,2022-09-08 06:42:55,36001,,,LARAccDsc,transaction.rewardProgram='L',"AccDesc ARMIS export, LAR, USALINCOLN points",,LAR AccDesc,2019-07-31 17:00:00,A,,"BR, PC, WC",,,"{""included"":[],""excluded"":[]}"
71953,,2019-10-04 04:45:37,28001,2022-09-08 06:42:55,36001,,,FPRAccDsc,transaction.rewardProgram='F',"AccDesc ARMIS export, FPR, USAFORD points",,FPRAccDesc,2019-07-31 17:00:00,A,,"AC, BR, PC, WC",,,"{""included"":[],""excluded"":[]}"
71954,,2019-10-04 04:45:37,28001,2022-09-08 06:42:55,36001,,,LARAccDscD,"And(transaction.rewardProgram='L', transaction.Points('USADEALERL')!=0, transaction.PartnerPoints(partner.code, 'USADEALERL')!=transaction.Points('USADEALERL'))","LAR AccDesc Other Dealer Points, ARMIS export, LAR, USADEALER points",,LAR AccDesc Other Dealer Points,2019-07-31 17:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
71955,,2019-10-04 04:45:37,28001,2022-09-08 06:42:55,36001,,,FPRAccDscD,"And(transaction.rewardProgram='F', transaction.Points('USADEALER')!=0, transaction.PartnerPoints(partner.code, 'USADEALER')!=transaction.Points('USADEALER'))","AccDesc Other Dealer Points, ARMIS export, FPR, USADEALER points",,FPRAccDesc Other Dealer Points,2019-07-31 17:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
71956,,2019-10-09 03:48:03,28001,2022-09-08 06:42:55,36001,,,DGP_VALID,'DGP'=transaction.reasonCode,Dealer Goodwill Points Validation,,Dealer Goodwill Points Validation Business Rule,2018-09-30 17:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
72952,,2019-10-25 13:40:40,43001,2022-09-08 06:42:55,36001,,,AccDGP,transaction.reasonCode='DGP',Accounting Dealer Goodwill factor rule,,Accounting DGP,2018-09-30 17:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
72953,,2019-10-28 12:49:33,43001,2022-09-08 06:42:55,36001,,,FraudCPO,"Or(transaction.Attribute('EarnType')='VehicleCPO', transaction.Attribute('EarnType')='VehicleCPOLite')",Flags an increased number of CPO or CPO Lite transactions per single GUID for potential fraud. One counter stores both earn types.,,Fraud CPO,2019-10-11 14:03:58,A,,AC,,,"{""included"":[],""excluded"":[]}"
72954,,2019-10-28 12:49:34,43001,2022-09-08 06:42:55,36001,,,FraudOAR,'MS'=transaction.reasonCode,Flags an increased number of OAR migrations per customer for potential fraud.,,Fraud OAR,2019-10-17 16:07:51,A,,PC,,,"{""included"":[],""excluded"":[]}"
72955,,2019-10-28 12:49:34,43001,2022-09-08 06:42:55,36001,,,FraudCarDe,,Flags an increased number of Car Detailing redemption transactions per single GUID for potential fraud.,,Fraud Car Detail,2019-10-17 12:37:35,A,,BR,,,"{""included"":[],""excluded"":[]}"
72956,,2019-10-28 15:10:45,43001,2022-09-08 06:42:55,36001,,,LAR PFS TT,"And(transaction.earnCode='DealerService', transaction.rewardProgram='L')",Pending Points are calculated as a transactions attribute - needed for Accounting. Transaction is set in T Temporary status. Also flags an increased number of Lincoln PFS transactions per single GUID for potential fraud.,,LAR PFS Temporary Transaction,2018-08-01 22:48:54,A,,ER,,,"{""included"":[],""excluded"":[]}"
73952,,2019-10-29 09:33:20,43001,2022-07-04 11:38:26,36001,,,UDB_LAR_D,"And('DoublePointsOffer'=activity.code, customer.CounterValue('UDB_LAR_D.UDB_LAR_D')<1)",Double Points are issued for Dealer Service transactions during the months of Nov and Dec in 2019,2019-12-31 23:59:59,UDB LAR feed double points,2019-11-01 00:00:00,R,A,AC,,,"{""included"":[],""excluded"":[]}"
73953,,2019-11-07 10:56:11,43001,2022-09-08 06:42:55,36001,,,FPRCPONEW,"And(transaction.rewardProgram='F', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), transaction.Attribute('EarnType')='VehicleCPO'))","Promotion issued points for CPO vehicle purchase in FPR. Issues 22,000 points. Triggers a mobile and owner notification.",,FPR CPO points new,2019-11-14 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
74952,,2019-11-15 07:23:06,28001,2022-09-08 06:42:55,36001,,,LPSNotTest,activity.code='MockActivity',,,LPS notification Test,2019-11-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
75952,,2019-11-22 02:24:59,6300,2022-07-04 11:38:26,36001,,,LAR_Tier,,,,LAR Tier test,2019-11-22 02:23:57,R,A,CA,,,"{""excluded"":[],""included"":[{""code"":""LAR_test_tier""}]}"
76952,,2019-11-26 14:04:41,43001,2022-02-07 03:36:30,75056,,,MlstTrg,,,,Milestone Trigger,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
76954,,2019-11-26 14:51:20,43001,2022-07-04 11:38:26,36001,,,CoPilotVal,activity.code='Milestone',,,Co Pilot Validation Business Rule,2019-10-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
76956,,2019-11-26 15:31:20,43001,2022-07-04 11:38:26,36001,,,CoPilotCle,activity.code='Milestone',,,CoPilotCleanup Business Rule,2019-10-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
77954,,2019-12-02 14:57:00,43001,2019-12-03 08:48:36,43001,2019-12-03 08:48:47,43001,CoPilotM1,"And(activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 1,2019-07-01 12:41:42,I,,AC,,,"{""included"":[],""excluded"":[]}"
77955,,2019-12-03 08:48:05,43001,2019-12-03 08:57:14,43001,2019-12-03 13:33:30,43001,CPSMClone,"And(activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 1_clone,2019-07-01 12:41:42,I,,AC,,,"{""included"":[],""excluded"":[]}"
77959,,2019-12-03 14:29:15,43001,2022-07-04 11:38:26,36001,,,CoPilotM6,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 6,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
77960,,2019-12-03 14:49:03,43001,2022-07-04 11:38:26,36001,,,CoPilotM8,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 8,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
77961,,2019-12-03 15:01:04,43001,2022-07-04 11:38:26,36001,,,CoPilotM10,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 10,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
77962,,2019-12-03 15:09:22,43001,2022-07-04 11:38:26,36001,,,CoPilotM12,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 12,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78006,,2019-12-03 13:32:55,43001,2022-07-04 11:38:26,36001,,,CoPilotM1,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 1,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78007,,2019-12-03 13:38:06,43001,2022-07-04 11:38:26,36001,,,CoPilotM2,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 2,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78008,,2019-12-03 14:17:04,43001,2022-07-04 11:38:26,36001,,,CoPilotM3,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 3,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78009,,2019-12-03 14:20:10,43001,2022-07-04 11:38:26,36001,,,CoPilotM4,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 4,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78010,,2019-12-03 14:22:55,43001,2022-07-04 11:38:26,36001,,,CoPilotM5,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 5,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78011,,2019-12-03 14:39:54,43001,2022-07-04 11:38:26,36001,,,CoPilotM7,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 7,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78012,,2019-12-03 14:52:32,43001,2022-07-04 11:38:26,36001,,,CoPilotM9,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 9,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78013,,2019-12-03 15:06:05,43001,2022-07-04 11:38:26,36001,,,CoPilotM11,"And(DictionaryItemExist('MlstEUCountries', account.HomeCountryCode()), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>=TrnRuleParam('EUMilestoneThreshold'), customer.Activity('deltaDriven', 'Milestone')<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', TrnRuleParam('EUMilestoneCode')), 'VIN')))",,,CoPilot Smart Card 11,2019-11-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
78952,,2019-12-04 13:07:56,43001,2022-09-08 06:42:55,36001,,,FPRSENot,"And(Or(InList(transaction.reasonCode, TrnRuleParam('reasonCodes')), InList(transaction.activityCode, TrnRuleParam('activityCodes')), InList(transaction.earnCode, TrnRuleParam('earnCodes'))), Add(transaction.Points('USAFORD'), transaction.Points('USADEALER'))>0, transaction.rewardProgram='F')",FPR Generic Smart Card to inform about points earned,,FPR Super Earn Notification,2019-10-01 00:00:00,A,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
78953,,2019-12-05 06:35:22,28001,2022-07-04 11:38:26,36001,,,CMKCPnts,"And(Or(transaction.activityCode='SaleNoModem', transaction.activityCode='SaleWithModem'), transaction.rewardProgram='F', account.HomeCountryCode()='USA', transaction.Attribute('EarnType')='VehicleNew', customer.CounterValue('cntCMKCPnt')=0)",Counter to store double Complimentary Maintenance bonus points for new vehicle sale transactions in KC region,2019-12-02 23:59:59,CM KC Points,2019-11-13 08:53:03,R,,AC,,,"{""included"":[],""excluded"":[]}"
78954,,2019-12-05 06:38:45,28001,2021-02-22 04:31:48,33001,,,FPR_CM_KC,"And('DoubleCMKC'=transaction.activityCode, customer.CounterValue('cntCMKC')<1, customer.CounterValue('CMKCPnts.cntCMKCPnt')>0)",Double complimentary maintenance points issued for FPR new vehicle sale transactions for partners in the KC region.,2020-02-01 23:59:59,FPR CM KC,2019-11-01 00:00:00,R,"V, A",AC,,,"{""included"":[],""excluded"":[]}"
78955,,2019-12-05 07:19:12,28001,2022-09-08 06:42:55,36001,,,FPRSRNot,"And(Add(transaction.Points('USAFORD'), transaction.Points('USADEALER'))<0, transaction.rewardProgram='F')",FPR Generic Smart Card to inform about points redeemed,,FPR Super Redeem Notification,2019-10-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
79952,,2020-02-04 05:38:18,28001,2022-09-08 06:42:55,36001,,,AccCat,"Or(InList(transaction.activityCode, TrnRuleParam('ADJUSTMENT_CODES'), TrnRuleParam('REDEEM_CODES')), transaction.pointsText!='0')",Customer activity accounting classification,,Accounting Category,2018-10-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
80952,,2020-02-06 03:09:17,28001,2022-09-08 06:42:55,36001,,,FNBOEarn,"And(InList(transaction.activityCode, TrnRuleParam('ccactivityCodes')), transaction.rewardProgram=""F"")",FNBO Earn Business Rule to process FNBO credit card transactions,,FNBO Earn Business Rule,2020-02-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
81952,,2020-02-13 11:37:32,28001,2021-02-15 10:15:10,28001,2021-02-15 10:15:15,28001,TW_TEST,"And(transaction.appSourceCode='PostmanTW', transaction.activityCode='LOGIN')",,,TW_TEST,2020-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
82952,,2020-02-25 11:46:53,43001,2022-09-08 06:42:55,36001,,,LARSENot,"And(Or(InList(transaction.reasonCode, TrnRuleParam('reasonCodes')), InList(transaction.activityCode, TrnRuleParam('activityCodes')), InList(transaction.earnCode, TrnRuleParam('earnCodes'))), Add(transaction.Points('USALINCOLN'), transaction.Points('USADEALERL'))>0, transaction.rewardProgram='L')",LAR Generic Smart Card to inform about points earned,,LAR Super Earn Notification,2019-02-03 00:00:00,A,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
83952,,2020-03-06 06:00:55,23001,2022-09-08 06:42:55,36001,,,LARCatRedm,"And(orderReward.Attribute('LARRrewardProcessingFlow')!='ECODE', transaction.partnerId=197001, Not(transaction.RewardExists('USADIS')), transaction.RewardCategoryExists('LAR_CAT'))",Redemption of reward from LAR Catalog,,LARCatalog Order Reward in Merkle,2020-03-07 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
84952,,2020-03-10 08:36:56,43001,,,2020-03-10 09:03:34,43001,CM1,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 1_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
84953,,2020-03-10 11:32:48,43001,,,2020-03-10 11:37:54,43001,CSC3,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 3_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
84954,,2020-03-10 12:45:49,43001,,,2020-03-10 12:47:12,43001,CSC5,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 5_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
84955,,2020-03-10 13:00:24,43001,,,2020-03-10 13:01:34,43001,CSC7,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 7_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
84956,,2020-03-10 13:11:31,43001,,,2020-03-10 13:12:23,43001,CSC9,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 9_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
84957,,2020-03-10 13:26:21,43001,,,2020-03-10 13:28:43,43001,CSC11,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 11_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85002,,2020-03-10 09:58:33,43001,,,2020-03-10 11:10:57,43001,CSM1,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 1_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85003,,2020-03-10 11:23:38,43001,,,2020-03-10 11:24:49,43001,CSC2,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 2_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85004,,2020-03-10 12:19:02,43001,,,2020-03-10 12:22:36,43001,CSC4,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 4_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85005,,2020-03-10 12:52:15,43001,,,2020-03-10 12:53:18,43001,CSC6,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 6_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85006,,2020-03-10 13:06:31,43001,,,2020-03-10 13:07:19,43001,CSC8,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 8_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85007,,2020-03-10 13:17:21,43001,,,2020-03-10 13:18:26,43001,CSC10,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())), activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), customer.Activity('deltaDriven', 'Milestone')<If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('NextNonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 10_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85008,,2020-03-10 13:34:59,43001,,,2020-03-10 13:36:30,43001,CSC12,"And(Or(InList(TrnRuleParam('EUParticipatingCountries'), account.HomeCountryCode()), InList(TrnRuleParam('NonEUParticipatingCountries'), account.HomeCountryCode())),activity.code='Milestone', customer.Activity('deltaDriven', 'Milestone')>If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('NonEUMilestoneThreshold')), IsEmpty(customer.Assignment(Sysdate(), 'Milestones', Concat(customer.Activity('VIN', 'Milestone'), '_', If(InList(account.HomeCountryCode(), TrnRuleParam('EUParticipatingCountries')), TrnRuleParam('EUMilestoneCode'), TrnRuleParam('NonEUMilestoneCode'))), 'VIN')))",,,CoPilot Smart Card 12_clone,2019-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
85952,,2020-03-20 08:19:38,28001,2020-12-09 06:13:07,28001,2020-12-09 06:13:11,28001,TW_GCG_TST,transaction.transactionSourceSystem='PostmanTW',,,Tw test GCG,2020-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
85953,,2020-03-23 17:21:09,36001,2021-02-22 04:54:49,33001,,,UDBPoints,"And(Add(transaction.PromotionTypePoints('USALINCOLN', 'UDB_LAR'), transaction.PromotionTypePoints('USAFORD', 'UDB feed'))>0, transaction.earnCode='Service', account.HomeCountryCode()='USA')",Counter to store double Service bonus points for Ford or Lincoln Service transactions,2020-04-30 23:59:59,UDB Service Points Counter,2020-03-19 00:00:00,R,,ER,,,"{""included"":[],""excluded"":[]}"
86952,,2020-03-23 17:21:08,36001,2021-02-22 04:54:12,33001,,,UDB_Double,"And('Double_Points_Thank_You'=activity.code, customer.CounterValue('UDBPoints.cntUDBLFP')>0)","Double points are issued in FPR and LAR, for all Dealer Service transactions, during a given time period.",2020-05-01 00:00:00,UDB Double Service Points,2020-03-19 00:00:00,R,A,AC,,,"{""included"":[],""excluded"":[]}"
87952,,2020-03-27 16:18:22,36001,2022-09-08 06:42:55,36001,,,LARSRNot,"And(Add(transaction.Points('USALINCOLN'), transaction.Points('USADEALERL'))<0, transaction.rewardProgram='L', Not(transaction.RewardCategoryExists('LAR_CAT')), partner.code!='FNBO', DateDiff(transaction.date, Sysdate(), 'DAY')<14)",LAR Generic Smart Card to inform about points redeemed,,LAR Super Redeem Notification,2019-10-01 00:00:00,A,,"AC, BR",,,"{""included"":[],""excluded"":[]}"
88952,,2020-04-02 17:20:13,43001,2020-04-02 19:52:17,43001,2020-04-06 11:35:07,43001,GCGBSCCN,"And(account.CounterGroupValue('EVTTN')>200, Mod(account.CounterGroupValue('EVTTN'), 300)=0, Div(account.CounterGroupLastChangesValue('EVBSDS', 3), 300)<=80, Or(IsEmpty(account.Attribute('BrkScrCNDateTime')), DateDiff(ToDate(account.Attribute('BrkScrCNDateTime')), Sysdate(), 'MINUTE')>=5), account.Attribute('VehicleMake')='Ford')",,,GCG Brake Score Coaching Notifications,2020-03-01 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
88953,,2020-04-06 10:50:16,43001,2022-02-07 03:36:30,75056,,,BrakeScCN,"And(transaction.date>DateAdd(Sysdate(), 'DAY', -7), Or(TrnRuleParam('TestingEnabled'), IsEmpty(account.Attribute('BrkScrCNDateTime')), DateDiff(ToDate(account.Attribute('BrkScrCNDateTime')), Sysdate(), 'HOUR')>=24), account.Attribute('VehicleMake')='Ford')",,,Brake Score coaching notifications,2019-06-06 08:36:52,A,,TE,,,"{""included"":[],""excluded"":[]}"
88954,,2020-04-06 14:09:37,43001,2022-02-07 03:36:30,75056,,,CO2SAVTot,,,,CO2 savings total counter,2019-05-01 04:49:03,A,,TE,,,"{""included"":[],""excluded"":[]}"
88955,,2020-04-06 14:16:22,43001,2020-04-16 16:43:28,43001,2020-04-16 16:44:17,43001,CO2SavRN,"And(Or(Not(account.HasBadge('CO2savings1')), Not(account.HasBadge('CO2savings2')), Not(account.HasBadge('CO2savings3')), Not(account.HasBadge('CO2savings4')), Not(account.HasBadge('CO2savings5')), Not(account.HasBadge('CO2savings6')), Not(account.HasBadge('CO2savings7'))), Or(account.Attribute('VehicleMake')='Ford', account.Attribute('VehicleMake')='Lincoln'))",,,CO2 Savings Reward Notification,2019-08-25 19:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
88956,,2020-04-06 14:25:42,43001,2022-02-07 03:36:30,75056,,,DEdailyS,ToBoolean(SysParam('OLD_TREND_LOGIC')),"For counters produces the sum, for trends the average",,Driving Efficiency daily counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88957,,2020-04-06 14:31:32,43001,2022-02-07 03:36:30,75056,,,DailyTrips,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,Daily Trips Number counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88958,,2020-04-06 14:43:28,43001,2022-02-07 03:36:30,75056,,,DrivEffRN,"And(account.Attribute('VehicleModel')!='Kuga', transaction.date>DateAdd(Sysdate(), 'DAY', -7), And(Or(account.CounterValue('DrivEffRN.CntDERN1')=0, account.CounterValue('DrivEffRN.CntDERN2')=0, account.CounterValue('DrivEffRN.CntDERN3')=0), account.Attribute('VehicleMake')='Ford'))",,,Driving Efficiency Reward Notifications,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88959,,2020-04-07 09:57:46,43001,2022-02-07 03:36:30,75056,,,ELKMdaily,"And(ToBoolean(SysParam('OLD_TREND_LOGIC')), ToInteger(JSONValue(event.eventContent, 'totalDistance'))>1.6)",,,Electric kilometers per day counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88960,,2020-04-07 10:11:42,43001,2022-02-07 03:36:30,75056,,,MilesRegD,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,Miles regenerated daily counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88961,,2020-04-07 13:28:59,43001,2022-02-07 03:36:30,75056,,,TotalTrips,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,Total Trips Number counters,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88962,,2020-04-07 13:36:53,43001,2022-02-07 03:36:30,75056,,,TotalKMO5,"And(ToBoolean(SysParam('OLD_TREND_LOGIC')), ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8)",,,Total kilometers per day counter for trips over 5 miles,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
88963,,2020-04-07 13:38:19,43001,2022-02-07 03:36:30,75056,,,TT over 5,"And(ToBoolean(SysParam('OLD_TREND_LOGIC')), ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8)",,,Total trips number over 5 miles,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89952,,2020-04-03 13:24:05,43001,2022-02-07 03:36:30,75056,,,BrakeScBdg,"And(transaction.date>DateAdd(Sysdate(), 'DAY', -7), Not(And(account.HasBadge('BrakeScore1'), account.HasBadge('BrakeScore2'), account.HasBadge('BrakeScore3'))), Or(And(Not(IsEmpty(TrnRuleParam('TestingEnabled'))), TrnRuleParam('TestingEnabled')), DateDiff(account.Attribute('BrakeScoreCalc'), Sysdate(), 'DAY')>=14, IsEmpty(account.Attribute('BrakeScoreCalc'))), account.Attribute('VehicleMake')='Ford')",,,BrakeScBdg,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89953,,2020-04-06 11:40:44,43001,2022-02-07 03:36:30,75056,,,BS daily,ToBoolean(SysParam('OLD_TREND_LOGIC')),"Brake score daily calculations - for counter it is sum, for trends it is the avg",,Brake score daily counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89954,,2020-04-06 14:14:43,43001,2022-02-07 03:36:30,75056,,,CO2SavBdg,"And(transaction.date>DateAdd(Sysdate(), 'DAY', -7), Or(account.Attribute('VehicleMake')='Ford', account.Attribute('VehicleMake')='Lincoln'))",,,CO2 Savings Badge,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89955,,2020-04-06 14:22:32,43001,2022-02-07 03:36:30,75056,,,CO2savings,"And(ToBoolean(SysParam('OLD_TREND_LOGIC')), Not(Or(IsEmpty(JSONValue(event.eventContent, 'electricDistance')), ToNumber(JSONValue(event.eventContent, 'electricDistance'))=0)))",,,CO2 savings daily counter,2019-05-01 04:36:51,A,,TE,,,"{""included"":[],""excluded"":[]}"
89956,,2020-04-06 14:29:03,43001,2022-02-07 03:36:30,75056,,,DT over 5,"ToBoolean(SysParam('OLD_TREND_LOGIC')), ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8)",,,Daily trips number over 5 miles,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89957,,2020-04-06 14:39:45,43001,2022-02-07 03:36:30,75056,,,DrivEffBdg,"And(account.Attribute('VehicleModel')!='Kuga', transaction.date>DateAdd(Sysdate(), 'DAY', -7), Or(Not(account.HasBadge('DrivingEfficiency1')), Not(account.HasBadge('DrivingEfficiency2')), Not(account.HasBadge('DrivingEfficiency3'))), Or(TrnRuleParam('TestingEnabled'), DateDiff(account.Attribute('DrivingEfficiencyCalc'), Sysdate(), 'DAY')>=14, IsEmpty(account.Attribute('DrivingEfficiencyCalc'))), account.Attribute('VehicleMake')='Ford')",,,DrivEffBdg,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89958,,2020-04-07 10:06:57,43001,2022-02-07 03:36:30,75056,,,KML daily,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,KML daily counter,2019-05-01 04:41:09,A,,TE,,,"{""included"":[],""excluded"":[]}"
89959,,2020-04-07 13:26:24,43001,2022-02-07 03:36:30,75056,,,fuelSaved,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,Fuel saved daily counter,2019-05-01 04:56:44,A,,TE,,,"{""included"":[],""excluded"":[]}"
89960,,2020-04-07 13:32:25,43001,2022-02-07 03:36:30,75056,,,TotalKMday,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,Total kilometers per day counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89961,,2020-04-07 13:37:13,43001,2022-02-07 03:36:30,75056,,,TotalELKM,"And(ToBoolean(SysParam('OLD_TREND_LOGIC')), ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8)",,,Total Electric kilometers counter,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89962,,2020-04-07 13:40:51,43001,2022-02-07 03:36:30,75056,,,PHEVRN,"And(account.Attribute('VehicleModel')!='Kuga',Or(And(account.HasBadge('ElectricPowerUse1'), account.CounterValue('CntPHEVRN1')=0),And(account.HasBadge('ElectricPowerUse2'), account.CounterValue('CntPHEVRN2')=0),And(account.HasBadge('ElectricPowerUse3'), account.CounterValue('CntPHEVRN3')=0)))",,,Electric Power Use Reward Notification,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
89963,,2020-04-07 13:47:51,43001,2022-05-06 06:11:04,36001,,,PHEVCN,"And(account.Attribute('VehicleModel')!='Kuga', transaction.date>DateAdd(Sysdate(), 'DAY', -7), account.CounterValue('TrndCalc.TotTripOv5')>9, ToInteger(JSONValue(event.eventContent, 'totalDistance'))>8, Mod(ToInteger(account.CounterValue('TrndCalc.TotTripOv5')), 10)=0, Div(account.CounterLastChangesValue('TrndCalc.ElKmTotal', 10), account.CounterLastChangesValue('TrndCalc.EVRngDst', 10))<0.5, Or(TrnRuleParam('TestingEnabled'), IsEmpty(account.Attribute('PHEVCNDateTime')), DateDiff(ToDate(account.Attribute('PHEVCNDateTime')), Sysdate(), 'HOUR')>=24))",,,Electric Power Use coaching notifications,2019-08-25 12:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
90952,,2020-04-14 04:57:58,28001,2021-02-22 04:08:58,33001,,,CoVidIssue,"And(customer.rewardProgram='F', account.HomeCountryCode()='USA', Or(transaction.type='CR', transaction.type='CA', transaction.activityCode='CoVidIssue'), customer.CounterValue('CoVidIssue')=0, Not(IsEmpty(customer.Attribute('ProgramTCDate'))))",,2020-08-01 00:00:00,CoVidIssue,2020-04-14 00:00:00,R,,"AC, CA, CR",,,"{""included"":[],""excluded"":[]}"
90953,,2020-04-14 05:24:17,28001,2021-02-22 04:09:19,33001,,,CoVidUse,"Or(transaction.CouponsQuantity('CoVidFPRGas')=1, transaction.CouponsQuantity('CoVidFPRDiesel')=1)",,2020-07-01 00:00:00,Co Vid Use Coupon,2020-04-14 00:00:00,R,,WC,,,"{""included"":[],""excluded"":[]}"
91952,,2020-04-16 08:11:17,43001,2022-02-07 03:36:30,75056,,,BrakeScRN,"And(Or(account.CounterValue('CntBSRN1')=0, account.CounterValue('CntBSRN2')=0, account.CounterValue('CntBSRN3')=0), account.Attribute('VehicleMake')='Ford')",,,Brake Score Reward Notifications,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
91953,,2020-04-16 08:14:07,43001,2022-02-07 03:36:30,75056,,,DrivEffCN,"And(Or(TrnRuleParam('TestingEnabled'), IsEmpty(account.Attribute('DrEffCNDateTime')), DateDiff(ToDate(account.Attribute('DrEffCNDateTime')), Sysdate(), 'HOUR')>=24), account.Attribute('VehicleMake')='Ford')",,,Driving Efficiency coaching notifications,2019-08-25 19:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
91954,,2020-04-16 16:47:08,43001,2022-05-06 06:10:48,36001,,,CO2SavRN,"And(transaction.date>DateAdd(Sysdate(), 'DAY', -7), And(Or(account.CounterValue('CntSavRN1')=0, account.CounterValue('CntSavRN2')=0, account.CounterValue('CntSavRN3')=0, account.CounterValue('CntSavRN4')=0, account.CounterValue('CntSavRN5')=0, account.CounterValue('CntSavRN6')=0, account.CounterValue('CntSavRN7')=0), Or(account.Attribute('VehicleMake')='Ford', account.Attribute('VehicleMake')='Lincoln')))",,,CO2 Savings Reward Notification,2019-08-25 12:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
92952,,2020-04-28 04:54:04,23001,2022-09-08 06:42:55,36001,,,LARCatMklB,,Processing of batch file from Merkle,,LAR Catalog Merkle Batch,2020-04-29 00:00:00,A,B,OU,,,"{""included"":[],""excluded"":[]}"
93952,,2020-05-29 04:28:58,28001,2021-02-22 04:09:57,33001,,,CoVidLARIs,"And(customer.rewardProgram='L', account.HomeCountryCode()='USA', Or(transaction.type='CR', transaction.type='CA', transaction.activityCode='CoVidIssue'), customer.CounterValue('CoVidLARIs')=0, Not(IsEmpty(customer.Attribute('ProgramTCDate'))))",,2020-08-01 00:00:00,CoVidLARIssue,2020-04-14 00:00:00,R,,"AC, CA, CR",,,"{""included"":[],""excluded"":[]}"
93953,,2020-05-29 04:40:22,28001,2021-02-22 04:08:38,33001,,,CoVidLARUs,transaction.CouponsQuantity('CoVidLAR')=1,,2020-08-01 00:00:00,Co Vid LAR Use Coupon,2020-04-14 00:00:00,R,,WC,,,"{""included"":[],""excluded"":[]}"
94952,,2020-06-02 06:39:57,28001,2022-09-08 06:42:55,36001,,,MdmDeAuth,"And(InList(transaction.activityCode, 'SaleWithModemDeAuth', 'LincolnSaleWithModemDeAuth'), transaction.Attribute('EarnType')='VehicleNew')",BR processes Modem Deauthorization events generated by CLM scheduled job.,,Modem Deauthorization,2020-04-30 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
95952,,2020-06-05 10:26:31,28001,2022-07-04 11:38:25,36001,,,VhSaleCncl,"InList(transaction.activityCode, 'SaleWithModemCancel, 'LincolnSaleWithModemCancel', 'SaleNoModemCancel')",Vehicle Sale Cancellation processing,,Vehicle Sale Cancellation processing,2020-04-01 17:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
96952,,2020-06-19 13:28:25,36001,2022-07-04 11:38:26,36001,,,FPR_OARBon,"And('MB'=activity.code, customer.CounterValue('FPRCntOARB')<1, Not(IsEmpty(customer.Attribute('ProgramTCDate'))))",Promotional: 1x per lifetime per member for OAR members that Accept FPR T&C's regardless of how many OAR accounts they have. Targeted audience,2020-06-30 23:59:59,FPR OAR Migration Bonus,2020-06-11 00:00:00,R,A,AC,,,"{""included"":[],""excluded"":[]}"
97952,,2020-07-24 19:35:33,54001,2022-09-08 06:42:55,36001,,,CLARModem,"InList(transaction.activityCode,'LincolnSaleWithModemCancel','LincolnSaleWithModemRnsSlCncl')",Deduct the LAR Complimentary Maintenance promotion issued points when a member cancels the Lincoln vehicle sale.,,Cancel LAR Vehicle sale with Modem,2020-04-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
98002,,2020-07-24 19:46:35,54001,2022-09-08 06:42:55,36001,,,CFPRSale,"InList(transaction.activityCode, 'SaleWithModemCancel', 'SaleNoModemCancel','SaleNoModemRnsSlCncl','SaleWithModemRnsSlCncl')",Deduct the FPR Complimentary Maintenance promotion issued points when a member cancels the Ford vehicle sale.,,Cancel FPR Vehicle Sale,2020-04-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
98952,,2020-08-04 08:03:08,28001,2022-02-07 03:36:30,75056,,,fuelUsed,ToBoolean(SysParam('OLD_TREND_LOGIC')),,,Fuel Used daily counter,2019-05-01 04:56:44,A,,TE,,,"{""included"":[],""excluded"":[]}"
98953,,2020-08-04 08:08:53,28001,2022-02-07 03:36:30,75056,,,0KMTrip,"ToNumber(JSONValue(event.eventContent, 'totalDistance'))<=0.1",BR handles processing of EV trip with 0 distance. Processing is stopped by this rule.,,0 kilometer trip,2019-01-01 00:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
99952,,2020-08-13 07:58:59,52001,2022-09-08 06:42:27,36001,,,AccCat,"Or(InList(transaction.activityCode, TrnRuleParam('ADJUSTMENT_CODES'), TrnRuleParam('REDEEM_CODES')), transaction.pointsText!='0')",Customer activity accounting classification,,Accounting Category,2020-08-11 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
99953,,2020-08-13 07:59:00,52001,2022-09-08 06:42:26,36001,,,LAR PFS TT,"And(transaction.earnCode='DealerService', transaction.rewardProgram='L')",Pending Points are calculated as a transactions attribute - needed for Accounting. Transaction is set in T Temporary status. Also flags an increased number of Lincoln PFS transactions per single GUID for potential fraud.,,LAR PFS Temporary Transaction,2020-08-11 17:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
99954,,2020-08-13 07:59:00,52001,2022-09-08 06:42:27,36001,,,LARModem,"And(transaction.Attribute('EarnType')='VehicleNew', transaction.activityCode='LincolnSaleWithModem', transaction.rewardProgram='L')",Promotion issued points when modem of a Lincoln vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,LAR Vehicle sale with Modem,2020-08-11 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
99955,,2020-08-13 07:59:01,52001,2022-09-08 06:42:27,36001,,,UDB_LAR,"And(transaction.earnCode='Service', transaction.rewardProgram='L')",Points are issued for Dealer Service transactions.,,UDB LAR feed,2020-08-11 17:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
99956,,2020-08-13 07:59:01,52001,2022-09-08 06:42:27,36001,,,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,FPR Vehicle No Modem New,2019-01-14 23:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
99957,,2020-08-13 08:07:18,52001,2022-09-08 06:42:26,36001,,,PFS TT,"And(transaction.earnCode='DealerService', transaction.rewardProgram='F')",Pending Points are calculated as a transactions attribute - needed for Accounting. Transaction is set in T Temporary status. Also flags an increased number of Ford PFS transactions per single GUID for potential fraud.,,FPR PFS Temporary Transaction,2018-09-30 17:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
99958,,2020-08-13 08:07:18,52001,2022-09-08 06:42:26,36001,,,Corr_max,transaction.Points('CANDEALER')>6000000,Points correction maximum,,Corr_max,2018-09-30 17:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
99959,,2020-08-13 08:07:18,52001,2022-09-08 06:42:26,36001,,,TrnAtrAct,,,,Validation:Set Act Trn Attributes,2018-12-31 20:05:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
99960,,2020-08-13 08:07:18,52001,2022-09-08 06:42:27,36001,,,LARSRNot,"And(Add(transaction.Points('CANLINCOLN'), transaction.Points('CANDEALERL'))<0, transaction.rewardProgram='L')",LAR Generic Smart Card to inform about points redeemed,,LAR Super Redeem Notification,2020-08-11 17:00:00,A,,"AC, BR",,,"{""included"":[],""excluded"":[]}"
99961,,2020-08-13 08:07:18,52001,2022-09-08 06:42:27,36001,,,ModAcNotif,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'))",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,FPR Vehicle sale with Modem Activation Notifications promotion,2020-08-11 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
99963,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,FPRSRNot,"And(Add(transaction.Points('CANFORD'), transaction.Points('CANDEALER'))<0, transaction.rewardProgram='F')",FPR Generic Smart Card to inform about points redeemed,,FPR Super Redeem Notification,2019-09-30 17:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
99964,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,FraudOAR,'MS'=transaction.reasonCode,Flags an increased number of OAR migrations per customer for potential fraud.,,Fraud OAR,2019-10-24 02:01:19,A,,PC,,,"{""included"":[],""excluded"":[]}"
99965,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,MdmNw3GFPR,"And(transaction.activityCode='SaleWithModem', transaction.Attribute('ModemType')='3G', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points when 3G sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,FPR Vehicle sale with 3G Modem ,2018-09-30 10:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
99966,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,FraudCarDe,,Flags an increased number of Car Detailing redemption transactions per single GUID for potential fraud.,,Fraud Car Detail,2019-10-24 08:38:57,A,,BR,,,"{""included"":[],""excluded"":[]}"
99967,,2020-08-13 08:08:31,52001,2022-09-08 06:42:26,36001,,,NOT_SUP_TR,,Promotion rejects all transaction which are not actually supported in Ford Program,,Not supported transactions,2018-09-26 17:00:00,A,,"AA, BE, BI, CC, CD, EA, LP, LT, M2, PF, PI, PL, PP, PQ, PR, RE",,,"{""included"":[],""excluded"":[]}"
99968,,2020-08-13 08:09:13,52001,2021-03-11 05:53:11,28001,2021-03-11 05:53:16,28001,FPRAccDscD,"And(transaction.rewardProgram='F', transaction.Points('CANDEALER')!=0, transaction.PartnerPoints(partner.code, 'CANDEALER')!=transaction.Points('CANDEALER'))","AccDesc Other Dealer Points, ARMIS export, FPR, CANDEALER points",,FPRAccDesc Other Dealer Points,2019-07-31 10:00:00,I,,BR,,,"{""included"":[],""excluded"":[]}"
99969,,2020-08-13 08:09:13,52001,2022-09-08 06:42:27,36001,,,AccDGP,transaction.reasonCode='DGP',Accounting Dealer Goodwill factor rule,,Accounting DGP,2018-09-30 10:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
99970,,2020-08-13 08:09:13,52001,2020-10-02 04:30:43,56001,,,LARSaleRec,"And(Or(transaction.activityCode='LincolnSaleWithModem', transaction.activityCode='LincolnSaleNoModem'), transaction.rewardProgram='L', account.HomeCountryCode()='CAN', Or(Not(And(transaction.Attribute('TrimLevel')='RESERVE', customer.Recognition('LAR.R'), Not(IsEmpty(customer.RecognitionEndDate('LAR.R'))))), Not(And(transaction.Attribute('TrimLevel')='BLACK LABEL', customer.Recognition('LAR.B'), Not(IsEmpty(customer.RecognitionEndDate('LAR.B')))))))",NOT APPLICABLE FOR CANADA Recognition tier assignment based on the trim level in the vehicle sale feeds.,,LAR Vehicle Sale w/ modem Recognition,2019-04-30 10:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
99971,,2020-08-13 08:09:13,52001,2022-09-08 06:42:27,36001,,,CLARModem,"InList(transaction.activityCode,'LincolnSaleWithModemCancel','LincolnSaleNoModemCancel','LincolnSaleWithModemRnsSlCncl','LincolnSaleNoModemRnsSlCncl')",Deduct the LAR Complimentary Maintenance promotion issued points when a member cancels the Lincoln vehicle sale. ,,Cancel LAR Vehicle sale with Modem,2020-05-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
99972,,2020-08-13 08:09:13,52001,2022-09-08 06:42:27,36001,,,CCPCValid,"InList(user.assignedProfiles, 'CC_Point_Correction_PHQ', 'CC_Point_Correction_BST')",Validates manual Ford Guide CC points correction transactions. Transactions that do not meet the Ford Guide CC points correction criteria result in an error message and are not stored.,,Manual CC Points Correction Validation,2020-03-24 00:00:00,A,"V, C",PC,,,"{""included"":[],""excluded"":[]}"
99976,,2020-08-13 08:12:49,52001,2022-09-08 06:42:27,36001,,,FraudCPO,transaction.Attribute('EarnType')='VehicleCPO',Flags an increased number of CPO transactions per single GUID for potential fraud.,,Fraud CPO,2019-10-24 08:32:36,A,,AC,,,"{""included"":[],""excluded"":[]}"
99978,,2020-08-13 08:24:02,52001,2022-09-08 06:42:26,36001,,,1STTCStore,"And(Not(IsEmpty(customer.Attribute('ProgramTCDate'))), Or(IsEmpty(customer.Attribute('FirstTCDate')),customer.Attribute('ProgramTCDate')<customer.Attribute('FirstTCDate')))",,,Promotion that stores original date of TC's acceptance,2020-08-12 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
100002,,2020-08-13 07:58:59,52001,2022-09-08 06:42:27,36001,,,FPRSENot,"And(Or(InList(transaction.reasonCode, TrnRuleParam('reasonCodes')), InList(transaction.activityCode, TrnRuleParam('activityCodes')), InList(transaction.earnCode, TrnRuleParam('earnCodes'))), Add(transaction.Points('CANFORD'), transaction.Points('CANDEALER'))>0, transaction.rewardProgram='F')",FPR Generic Smart Card to inform about points earned,,FPR Super Earn Notification,2020-08-11 17:00:00,A,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
100003,,2020-08-13 07:59:01,52001,2022-09-08 06:42:27,36001,,,LARSENot,"And(Or(InList(transaction.reasonCode, TrnRuleParam('reasonCodes')), InList(transaction.activityCode, TrnRuleParam('activityCodes')), InList(transaction.earnCode, TrnRuleParam('earnCodes'))), Add(transaction.Points('CANLINCOLN'), transaction.Points('CANDEALERL'))>0, transaction.rewardProgram='L')",LAR Generic Smart Card to inform about points earned,,LAR Super Earn Notification,2020-08-11 17:00:00,A,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
100004,,2020-08-13 07:59:01,52001,2022-09-08 06:42:26,36001,,,PtsPrtVali,IsEmpty(transaction.partnerId),A technical business rule that validates that partner is non-empty for point issuing transactions.,,Partner non-empty for Point issuing,2020-08-11 17:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
100006,,2020-08-13 08:07:18,52001,2021-03-11 05:52:09,28001,2021-03-11 05:52:18,28001,LARAccDscD,"And(transaction.rewardProgram='L', transaction.Points('CANDEALERL')!=0, transaction.PartnerPoints(partner.code, 'CANDEALERL')!=transaction.Points('CANDEALERL'))","LAR AccDesc Other Dealer Points, ARMIS export, LAR, CANDEALER points",,LAR AccDesc Other Dealer Points,2019-07-31 10:00:00,I,,BR,,,"{""included"":[],""excluded"":[]}"
100007,,2020-08-13 08:07:18,52001,2022-09-08 06:42:27,36001,,,LAR_OARBon,"And('LAR_MigrationBonus'=activity.code, customer.CounterValue('LAR_OARBon.LAR_CntOAR')<1)",Promotional: 1x per lifetime per member for LAR OAR members that Accept FPR T&C's regardless of how many OAR accounts they have.,2019-12-31 16:59:59,LAR OAR Bonus,2018-09-04 02:01:40,A,A,AC,,,"{""included"":[],""excluded"":[]}"
100008,,2020-08-13 08:07:18,52001,2021-03-11 05:53:57,28001,2021-03-11 05:54:10,28001,LARAccDsc,transaction.rewardProgram='L',"AccDesc ARMIS export, LAR, CANLINCOLN points",,LAR AccDesc,2019-07-31 10:00:00,I,,"BR, PC, WC",,,"{""included"":[],""excluded"":[]}"
100009,,2020-08-13 08:07:18,52001,2022-09-08 06:42:27,36001,,,FraudCCPC,"InList(user.assignedProfiles, 'CC_Point_Correction_PHQ')","Rejects manual Ford Guide CC points correction transactions based on daily or monthly limits, per member.",,Fraud CC Points Correction,2020-03-24 00:00:00,A,"V, C",PC,,,"{""included"":[],""excluded"":[]}"
100010,,2020-08-13 08:07:18,52001,2022-09-08 06:42:27,36001,,,MdmDeAuth,"And(InList(transaction.activityCode, 'SaleWithModemDeAuth', 'LincolnSaleWithModemDeAuth'), transaction.Attribute('EarnType')='VehicleNew')",BR processes Modem Deauthorization events generated by CLM scheduled job.,,Modem Deauthorization,2020-08-11 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100011,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points when sync connect modem of a vehicle is activated within 60 days of the vehicle purchase and the vehicle is new.,,FPR Vehicle sale with Modem - NEW,2019-01-14 23:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100012,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,FPRCPONEW,"And(transaction.rewardProgram='F', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), transaction.Attribute('EarnType')='VehicleCPO'))",Promotion issued points for CPO vehicle purchase in FPR with updated/increased point value,,FPR CPO points new,2019-11-13 17:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100013,,2020-08-13 08:08:31,52001,2021-03-11 05:53:39,28001,2021-03-11 05:53:44,28001,FPRAccDsc,transaction.rewardProgram='F',"AccDesc ARMIS export, FPR, CANFORD points",,FPRAccDesc,2019-07-31 10:00:00,I,,"BR, PC, WC",,,"{""included"":[],""excluded"":[]}"
100014,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,CFPRSale,"InList(transaction.activityCode, 'SaleWithModemCancel', 'SaleNoModemCancel', 'SaleWithModemRnsSlCncl', 'SaleNoModemRnsSlCncl')",Deduct the FPR Complimentary Maintenance promotion issued points when a member cancels the Ford vehicle sale.,,Cancel FPR Vehicle Sale,2020-05-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100015,,2020-08-13 08:08:31,52001,2022-09-08 06:42:27,36001,,,DGP_VALID,'DGP'=transaction.reasonCode,Dealer Goodwill Points Validation,,Dealer Goodwill Points Validation Business Rule,2018-09-30 10:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
100016,,2020-08-13 08:09:13,52001,2022-09-08 06:42:27,36001,,,FPRCPOPts,"And(transaction.rewardProgram='F', account.HomeCountryCode()='CAN', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), transaction.Attribute('EarnType')='VehicleCPO'))",Promotion issued points for CPO vehicle purchase in FPR,2019-11-13 16:59:59,FPR CPO points,2019-07-31 10:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100017,,2020-08-13 08:09:13,52001,2022-09-08 06:42:27,36001,,,LARModAct,"And(transaction.activityCode='LincolnSaleWithModem', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'), transaction.rewardProgram='L', Or(transaction.Attribute('TrimLevel')='STANDARD', transaction.Attribute('TrimLevel')='RESERVE', transaction.Attribute('TrimLevel')='BLACK LABEL'), transaction.Attribute('EarnType')='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,LAR Modem Activation Notification,2019-06-02 10:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100018,,2020-08-13 08:09:13,52001,2020-10-02 05:39:31,56001,,,TPT_check,"Or(transaction.Points('CANFORD')!=0, transaction.Points('CANDEALER')!=0)",NO LONGER NEEDED (account home country logic removed)Promotion rejecting transactions with point types: CANFord and CANDealer for members with account home country different than CAN.,,Transaction Points Type extra check,2018-09-26 17:00:00,R,,"AC, CA, CR, ER, PC",,,"{""included"":[],""excluded"":[]}"
100019,,2020-08-13 08:09:13,52001,2022-09-08 06:42:27,36001,,,LARPtsRec,"And(transaction.rewardProgram='L', Add(transaction.Points('CANDEALERL'), transaction.Points('CANLINCOLN'))>0)",,,LAR Recognition based on points,2019-06-02 10:00:00,A,,"AC, BE, CA, CR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
100020,,2020-08-13 08:09:13,52001,2022-09-08 06:42:26,36001,,,SaleValid,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem')",,,Validation:Sale Validation,2018-09-30 10:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
100021,,2020-08-13 08:12:49,52001,2022-09-08 06:42:27,36001,,,UDB feed,"And(transaction.earnCode='Service', transaction.rewardProgram='F')",Customer is being added to the FPR Pilot when making a service transaction.,,FPR UDB feed,2018-09-30 17:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
100022,,2020-08-13 08:28:39,52001,2022-09-08 06:42:26,36001,,,Expiration,"And(Or(InList(transaction.type, 'CR', 'CA', 'ER', 'BR', 'PC'), transaction.pointsText!='0'), Or(IsEmpty(customer.Attribute('LastActivityDate')), customer.Attribute('LastActivityDate')<Trunc(Sysdate(), 'DAY')))",customer last activity date update,,Points renewal,2020-08-12 00:00:00,A,,"AC, BR, CA, CR, ER, PC",,,"{""included"":[],""excluded"":[]}"
100952,,2020-08-24 08:55:23,28001,2022-02-07 03:36:30,75056,,,flTpSet,IsEmpty(account.Attribute('FuelType')),,,BR that sets the fuel Type when empty,2018-10-01 00:00:00,A,,"AO, AR, AS, AV",,,"{""included"":[],""excluded"":[]}"
101952,,2020-09-03 19:59:46,52001,2022-09-08 06:42:55,36001,,,dlr_nt_enr,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D', Not(And(transaction.type='PC', InList(transaction.reasonCode, 'ANON_POINTS_REMOVAL', 'DATA_TRANSFER'))))",BR block transactions from dealers who have not enrolled in either LAR or FPR,,Dealer not enrolled,2018-10-01 00:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
101953,,2020-09-03 20:05:10,52001,2022-09-08 06:42:26,36001,,,dlr_nt_enr,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D', Not(And(transaction.type='PC', InList(transaction.reasonCode, 'ANON_POINTS_REMOVAL', 'DATA_TRANSFER'), Or(Not(IsEmpty(partner.larTerminatedDate)), Not(IsEmpty(partner.terminatedDate))))))",BR will block transactions from dealers not enrolled in either LAR or FPR,,Dealer not enrolled,2018-09-30 23:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
102952,,2020-09-11 11:12:25,28001,2022-02-07 03:36:30,75056,,,strtD1Cln,Not(IsEmpty(account.Attribute('startDay1'))),BR that cleans startDay1 attribute,,Start Day 1 Clean,2020-08-31 17:00:00,A,,"AD, AM",,,"{""included"":[],""excluded"":[]}"
103952,,2020-10-06 09:11:00,28001,2022-09-08 06:42:26,36001,,,tmpAccVal,account.typeCode='OAR_TMP_ACC',Rule for processing/rejecting transactions for temp accounts,,Temporary Account Redemption Validation,2020-09-18 17:00:00,A,,"AC, BR, ER, PC",,,"{""included"":[],""excluded"":[]}"
104952,,2020-10-12 07:12:12,28001,2022-09-08 09:53:47,36001,,,AccDesc,"Or(InList(transaction.type, 'BR', 'AC'), InList(transaction.reasonCode, 'DGP', 'GUIDES_AR'))",Business Rulegenerating Accounting Descriptions used by DSI batch file,,Accounting Description for DSI,2019-12-31 17:00:00,A,,"AC, BR, PC",,,"{""included"":[],""excluded"":[]}"
106003,,2020-10-21 05:53:45,57001,2022-02-07 03:36:30,75056,,,CoPilotM1,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), IsEmpty(customer.Attribute('LastMlstTriggerDstc')))",,,CoPilot Smart Card 1,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
106953,,2020-10-22 04:06:17,57001,2022-02-07 03:36:30,75056,,,CoPilotM3,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 3,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
107002,,2020-10-22 03:19:02,57001,2022-02-07 03:36:30,75056,,,CoPilotM2,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 2,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
107952,,2020-10-23 01:08:10,57001,2022-02-07 03:36:30,75056,,,MlstTrgUpd,,,,Milestone Trigger Updated,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
108952,,2020-11-19 00:29:03,57001,2022-02-07 03:36:30,75056,,,CoPilotM4,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 4,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
109952,,2020-11-19 06:38:27,57001,2022-02-07 03:36:30,75056,,,CoPilotM5,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 5,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
109953,,2020-11-19 10:25:33,28001,2021-02-15 10:15:20,28001,2021-02-15 10:15:23,28001,TwTrigTst,,,,TwTrigTst,2020-11-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
109954,,2020-11-20 00:34:56,57001,2022-02-07 03:36:30,75056,,,CoPilotM6,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 6,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
110952,,2020-11-20 09:14:24,57001,2022-02-07 03:36:30,75056,,,CoPilotM7,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 7,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
111952,,2020-11-20 09:27:15,57001,2022-02-07 03:36:30,75056,,,CoPilotM8,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 8,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
112952,,2020-11-25 01:22:05,57001,2022-02-07 03:36:30,75056,,,CoPilotM9,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 9,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
112953,,2020-11-25 02:09:41,57001,2022-02-07 03:36:30,75056,,,CoPilotM10,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 10,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
112954,,2020-11-25 06:26:34,57001,2022-02-07 03:36:30,75056,,,CoPilotM12,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 12,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
113002,,2020-11-25 06:08:49,57001,2022-02-07 03:36:30,75056,,,CoPilotM11,"And(DictionaryItemExist('MlstEUCountries', transaction.countryCode), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))>=TrnRuleParam('EUMilestoneThreshold'), Sub(account.Attribute('OdometerCurrent'), customer.Attribute('OdometerInitial'))<TrnRuleParam('NextEUMilestoneThreshold'), TrnRuleParam('EUMilestoneThreshold')>customer.Attribute('LastMlstTriggerDstc'))",,,CoPilot Smart Card 11,2019-11-01 00:00:00,A,,AV,,,"{""included"":[],""excluded"":[]}"
113952,,2020-12-09 06:48:54,6300,,,2020-12-09 06:49:01,6300,asd,,,,asd,2020-12-10 00:00:00,I,,TE,,,"{""included"":[],""excluded"":[]}"
114952,,2020-12-29 03:42:38,28001,2020-12-29 04:32:56,28001,2020-12-29 04:33:03,28001,tw_tst,,,,tw_tst,2020-12-30 00:00:00,I,,ER,,,"{""included"":[],""excluded"":[]}"
114953,,2020-12-29 06:02:11,28001,2022-02-07 03:36:30,75056,,,TrndCalc,,Trend Calculations using new logic,,Trend Calculations,2020-12-01 00:00:00,A,,TE,,,"{""included"":[],""excluded"":[]}"
115952,,2021-01-07 10:06:38,36001,2022-09-08 06:42:55,36001,,,DCX_ENR,,The promotion call FS endpoint to publish the message to the topic for DCX to read this later.,,Enrloment: Publish the message to the topic for DCX to read this later,2021-01-01 00:00:00,A,,CR,,,"{""included"":[],""excluded"":[]}"
116002,,2021-01-07 12:26:52,36001,2022-09-08 06:42:55,36001,,,DCX_PTS,"And(transaction.reasonCode!='ANON_POINTS_REMOVAL', Or(transaction.Points('USAFORD')!=0, transaction.Points('USADEALER')!=0, transaction.Points('USADEALERL')!=0, transaction.Points('USALINCOLN')!=0))",The promotion call FS endpoint to publish the message to the topic for DCX to read this later.,,Points update: Publish the message to the topic for DCX to read this later,2021-01-01 00:00:00,A,,"AA, AC, AD, AM, AN, AO, AR, AS, AT, AV, BA, BE, BI, BR, CA, CC, CM, CQ, CR, EA, ER, LP, LT, M2, MR, OU, PC, PE, PF, PI, PL, PP, PQ, PR, RE, RV, VR, VU, WA, WC",,,"{""included"":[],""excluded"":[]}"
116952,,2021-01-14 11:36:33,36001,2021-03-15 06:43:25,36001,2021-03-15 06:44:35,36001,BZactivity,transaction.activityCode='DCX',,,BZ Test activity,2021-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
117952,,2021-01-21 10:37:03,36001,2022-09-08 06:42:55,36001,,,AtrPE,,Customer's LastActivityDate as of the time of points expiration,,AtrPE,2021-01-19 00:00:00,A,,PE,,,"{""included"":[],""excluded"":[]}"
117953,,2021-01-21 10:59:43,36001,2022-09-08 06:42:27,36001,,,AtrPE,,Customer's LastActivityDate as of the time of points expiration,,AtrPE,2021-01-19 00:00:00,A,,PE,,,"{""included"":[],""excluded"":[]}"
118002,,2021-01-21 10:56:47,36001,2022-09-08 06:42:55,36001,,,AtrPts,,,,Attribute: Last activity date points/ no points,2015-01-19 00:00:00,A,,"AC, BR, CA, CR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
118003,,2021-01-21 10:59:43,36001,2022-09-08 06:42:27,36001,,,AtrPts,,,,Attribute: Last activity date points/ no points,2015-01-19 00:00:00,A,,"AC, BR, CA, CR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
118004,,2021-01-21 11:19:30,36001,2022-09-08 06:42:55,36001,,,FPRCPOLite,"And(transaction.rewardProgram='F', And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem'), transaction.Attribute('EarnType')='VehicleCPOLite'))","Lite version of FPRCPONEW points promotion. Issues 11,000 points. Triggers a mobile and owner notification.",,FPRCPOLite,2021-01-06 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
118952,,2021-01-22 10:39:09,36001,2022-09-08 06:42:55,36001,,,FraudCCPC,"InList(user.assignedProfiles, 'CC_Point_Correction_PHQ')","Rejects manual Ford Guide CC points correction transactions based on daily or monthly limits, per member.",,Fraud CC Points Correction,2020-03-24 00:00:00,A,C,PC,,,"{""included"":[],""excluded"":[]}"
119952,SSR-PMP,2021-02-08 05:35:52,28001,2022-09-08 06:42:55,36001,,,PMPRwdChc,transaction.activityCode='RewardChoice',rewardChoice at vehicle sale,,PMPRwdChc,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
120952,SSR-PMP,2021-02-10 04:19:41,28001,2022-09-08 06:42:55,36001,,,PMPCntrct,"And(transaction.activityCode='FordProtectPlanPurchase', DictionaryItemExist('CONTRACT_TYPES_FOR_REIMBURSEMENT', customer.CurrentActivityAttribute('ContractType')))",PMP contract processing for dealer reimbursement,,PMPContract,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
120953,SSR-PMP,2021-02-10 05:38:07,28001,2021-02-15 07:06:40,28001,2021-02-15 07:06:45,28001,PMPPtsElgb,"And(InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWIthModem'), transaction.Attribute('EarnType')='VehicleNew')",Processing Sale transaction in PMP context,,PMP Sale Processing for eligible points,2021-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
120954,SSR-PMP,2021-02-10 05:47:50,28001,2021-02-15 07:01:12,28001,2021-02-15 07:01:18,28001,PMPSalePts,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem')",Store number of points issued by Sale,,PMP Sale Points,2021-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
121952,,2021-02-15 07:11:30,28001,2022-09-08 06:42:55,36001,,,PMPSale,"And(InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem'), transaction.Attribute('EarnType')='VehicleNew', transaction.Attribute('currentRewardChoice')='pmp')",Procesing Sale transaction in the context of PMP,,PMPSale,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
121953,,2021-02-15 09:28:05,28001,2022-09-08 06:42:55,36001,,,PMPR,transaction.activityCode='PMPReimbursement',,,PMP Reimbursement,2021-01-01 00:00:00,A,V,AC,,,"{""included"":[],""excluded"":[]}"
122952,,2021-02-15 09:23:46,28001,2021-02-15 09:26:00,28001,2021-02-15 09:26:14,28001,PMPR,transaction.activityCode='PMPReimbursement',,,PMP Reimbursement,2021-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
123952,,2021-02-16 03:21:12,56001,2022-09-08 06:42:55,36001,,,LPSCPNTEST,"And(Or(transaction.Points('USAFORD')=1, transaction.Points('USALINCOLN')=1), 'GUIDES_GC'=transaction.Attribute('Reason'))",LPS test coupons issuance,,LPS test coupons issuance,2021-02-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
124952,,2021-02-19 01:55:50,57001,2022-09-08 06:42:55,36001,,,AMIRebate,"InList(transaction.activityCode, TrnRuleParam('activityCodes'))",,,AMI Rebate,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
125952,,2021-02-22 03:37:00,33001,2022-09-08 06:42:55,36001,,,CCPCValid,"And(InList('CC_Point_Correction_PHQ', 'CC_Point_Correction_BST', user.assignedProfiles), transaction.Points('USA_F_MLST')=0)",Validates manual Ford Guide CC points correction transactions. Transactions that do not meet the Ford Guide CC points correction criteria result in an error message and are not stored.,,Manual CC Points Correction Validation,2020-04-23 00:00:00,A,C,PC,,,"{""included"":[],""excluded"":[]}"
125953,,2021-02-22 04:44:20,33001,2022-09-08 06:42:55,36001,,,Reject0Pnt,"And(InList(transaction.activityCode, 'SaleNoModem', 'SaleWithModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem'), CharIndex(transaction.receiptId, 'MANot')=-1, transaction.totalPointsValue=0, IsEmpty(Sublist(transaction.triggeredRules, 'code', 'LARSaleRec')))",Business rule rejects 0 point vehicle sale transactions exclusive of modem authorizations (based on the Receipt ID) or LAR Sale Recognitions. MUST execute after all point issuing vehicle sale Business Rules in the Promotion Order. ,,Reject 0 Point Vehicle Sale,2020-11-15 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
126952,,2021-03-03 17:03:49,36001,2022-09-08 06:42:55,36001,,,MobileWUse,"Or(transaction.CouponsQuantity('MobileWipersQ2')=1, transaction.CouponsQuantity('MobileWorksQ2')=1)",,,"Mobile Works, Wipers Offer Use",2021-03-01 00:00:00,A,,WC,,,"{""included"":[],""excluded"":[]}"
127952,,2021-03-04 02:43:20,36001,2021-03-04 03:57:46,28001,,,MobileTest,,,,MobileTest,2021-03-01 00:00:00,R,,PC,,,"{""included"":[],""excluded"":[]}"
128952,,2021-03-07 11:51:44,36001,2022-09-08 06:42:55,36001,,,VINdedupl,"Or(And(transaction.type='PC', InList(transaction.reasonCode, 'GUIDES_CM', 'GUIDES_CMCPO', 'VPPR', 'VPPR_CPO')), And(transaction.type='AC', InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem')))",As a Guide I want to perform Points Correction for a customer without risking double awarding due to sale already having been processed or being processed in the future.,,Deduplication between Points Corrections and Sales,2021-01-01 00:00:00,A,,"AC, PC",,,"{""included"":[],""excluded"":[]}"
129952,,2021-03-09 06:37:09,28001,2022-09-08 06:42:26,36001,,,PMPSale,"And(InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem'), transaction.Attribute('EarnType')='VehicleNew', transaction.Attribute('currentRewardChoice')='pmp')",Procesing Sale transaction in the context of PMP (VIN added to pmpVINs for the customer) stores vin in saleVINs so that points are issued updates receiptId to PMP to allow MDR processing breaks rule processing to stop any Sale notifications / issuance,,PMPSale,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
129953,,2021-03-09 06:40:55,28001,2022-09-08 06:42:27,36001,,,PMPCntrct,transaction.activityCode='FordProtectPlanPurchase',PMP contract processing for dealer reimbursement,,PMPContract,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
129954,,2021-03-09 06:43:05,28001,2022-09-08 06:42:27,36001,,,PMPRwdChc,transaction.activityCode='RewardChoice',rewardChoice at vehicle sale,,PMPRwdChc,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
130952,,2021-03-09 06:57:02,28001,2022-09-08 06:42:27,36001,,,PMPR,transaction.activityCode='PMPReimbursement',,,PMP Reimbursement,2021-01-01 00:00:00,A,V,AC,,,"{""included"":[],""excluded"":[]}"
131952,,2021-03-15 06:34:06,36001,2022-09-08 06:42:55,36001,,,PCValid,,Validates a point correction transaction,,Validation:Points Correction,2021-01-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
132952,,2021-03-15 06:36:15,36001,2022-09-08 06:42:26,36001,,,PCValid,Size(transaction.comments)>74,,,Points Correction comment validation,2021-01-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
133952,,2021-03-16 12:19:26,36001,2022-09-08 06:42:55,36001,,,LARModAct,"And(transaction.activityCode='LincolnSaleWithModem', transaction.Attribute('ActivationDate')=ToDate('01/01/0001', 'dd/MM/yyyy'), transaction.rewardProgram='L', Or(transaction.Attribute('TrimLevel')='STANDARD', transaction.Attribute('TrimLevel')='RESERVE', transaction.Attribute('TrimLevel')='BLACK LABEL'), transaction.Attribute('EarnType')='VehicleNew')",Notifications to notify about the need of modem Activation for Vehicle sale promotion,,LAR Modem Activation Notification,2019-06-02 10:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
134952,,2021-03-18 05:06:43,56001,2022-09-08 06:42:55,36001,,,CpnDroPnts,"Or(transaction.CouponsQuantity('CPN_SERVICE_DRO')>0, transaction.CouponsQuantity('CPN_RETAIL_DRO')>0, transaction.CouponsQuantity('CPN_SALE_DRO')>0, transaction.CouponsQuantity('CPN_FPP_DRO')>0)",,,Issue points for DRO coupons,2021-03-01 00:00:00,A,,WC,,,"{""included"":[],""excluded"":[]}"
135952,,2021-03-22 03:57:54,28001,2022-09-08 06:42:55,36001,,,pfsRdmVal,,,,PFS redemption Validation,2021-03-01 00:00:00,A,,"BR, WC",,,"{""included"":[],""excluded"":[]}"
135953,,2021-03-22 11:04:10,28001,2022-09-08 06:42:55,36001,,,TmpSaleCnc,"InList(transaction.activityCode, 'LincolnSaleWithModem', 'LincolnSaleNoModem', 'SaleWithModem', 'SaleNoModem')",,,Temporary Sale Cancellation,2020-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
135954,,2021-03-22 11:22:17,28001,2022-09-08 06:42:27,36001,,,TmpSaleCnc,"InList(transaction.activityCode, 'LincolnSaleWithModem', 'LincolnSaleNoModem', 'SaleWithModem', 'SaleNoModem')",,,Temporary Sale Cancellation,2020-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
136952,,2021-03-22 04:59:59,28001,2022-09-08 06:42:27,36001,,,pfsRdmVal,,,,PFS redemption Validation,2021-03-01 00:00:00,A,,"BR, WC",,,"{""included"":[],""excluded"":[]}"
137952,,2021-04-08 02:31:58,36001,2022-09-08 06:42:55,36001,,,FPR_RegRec,transaction.rewardProgram='F',,,FPR Bronze Tier Level for Registration,2021-01-01 00:00:00,A,,CR,,,"{""included"":[],""excluded"":[]}"
138952,,2021-04-08 03:07:20,36001,2022-09-08 06:42:55,36001,,,FPRRecTier,"And(transaction.rewardProgram='F', transaction.Points('USA_F_MLST')>0)",Grant recognition and send DCX only for achieving and prolonging. Shortening handled in CFPRSale_M,,FPR Silver and Blue Tier Level Grant rule + DCX event send,2020-01-01 00:00:00,A,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
139952,,2021-04-15 09:49:54,36001,2022-09-08 06:42:55,36001,,,DCX_MLST,"And(transaction.rewardProgram='F', transaction.Points('USA_F_MLST')!=0)",,,Milestones update: Publish the message to the topic for DCX to read this later,2021-01-01 00:00:00,A,,"AC, ER, PC, PE",,,"{""included"":[],""excluded"":[]}"
140002,,2021-04-15 10:18:21,36001,2021-10-14 09:19:56,36001,,,DCX_TIER,"And(transaction.rewardProgram='F', transaction.Points('USA_FPR_Q')>0)",Notifications for changing from Bronze to Silver and Silver to Blue. Needs to be put before rule granting tier FPRRecTier in promotion order.Business team wanted the messages to be sent out only for upgrades.,,Tier update: Publish the message to the topic for DCX to read this later,2021-04-01 00:00:00,R,,"AC, ER, PC",,,"{""included"":[],""excluded"":[]}"
140952,,2021-04-26 08:50:47,36001,2022-09-08 06:42:27,36001,,,PFSCPNTCAN,"And(Or(transaction.Points('CANFORD')=1, transaction.Points('CANLINCOLN')=1), 'DGP'=transaction.Attribute('Reason'))",,,PFSCPNTCAN,2021-01-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
141952,,2021-05-07 08:53:50,56001,2022-09-08 06:42:55,36001,,,CcsAccum,"And(Or(transaction.activityCode='CreditCardSpend', transaction.activityCode='RetroCreditCardSpend'), Or(customer.CurrentActivityAttribute('TransactionCode')='05', customer.CurrentActivityAttribute('TransactionCode')='26'))",Rule issues milestones based on customer credit card spend history.Includes retro and normal credit card activities.,,Credit Card Spend accumulation,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
142952,,2021-05-17 06:08:10,56001,2022-09-08 06:42:55,36001,,,PMPMiles,"And(transaction.activityCode='FordProtectPlanPurchase', transaction.rewardProgram='F', InList(TrnRuleParam('eligibleForMilestones'), customer.CurrentActivityAttribute('ContractType')))",PMP milestones issuance for eligible Ford Protect Plan purchase,,PMP milestones issuance,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
143952,,2021-05-18 06:03:47,56001,2022-09-08 06:42:55,36001,,,RetroMiles,"InList(TrnRuleParam('retroActivityCodes'), transaction.activityCode)",Rule for milestones issuance based on retro activity codes.RetroCreditCardSpend activity is handled by rule CcsAccum.,,Retro milestones issuance,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
144952,,2021-05-27 10:01:08,57001,2022-09-08 06:42:55,36001,,,CFPRSale_M,"InList(transaction.activityCode, 'SaleWithModemCancel', 'SaleNoModemCancel','SaleWithModemRnsSlCncl','SaleNoModemRnsSlCncl')",Deduct the FPR Milsetones when a member cancels the Ford vehicle sale. Shorten recognitionEndDate and send DCX shorteming event for non retro activities. Tiers granted vis Tier Invitation are not shortened by this rule.,,Cancel FPR Vehicle Sale_Milestones,2020-04-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
145952,,2021-06-01 08:56:00,56001,2022-09-08 06:42:55,36001,,,TiersRecer,transaction.activityCode='Recertification',,,FPR Tiers recertification rule,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
146952,,2021-06-07 16:52:16,36001,2022-09-08 06:42:55,36001,,,FPRTierInv,"And(transaction.rewardProgram='F', transaction.activityCode='TierInvitation')","The rule assigns proper Tier Level based on the attribute passed in the Tier Invitation file. Sends DCX Tier Change event and assigns valued to the attributes used in CFPRSale_M rule, the attributes prevent Tier granted via invitation from shortening.",,FPR Silver and Blue Tier Invitation Rule,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
147952,,2021-06-09 10:17:24,67051,2022-09-08 06:42:55,36001,,,PTSLimit,transaction.totalPointsValue>=5000,Check for potential fraud whether limit of points within single transaction is exceeded.,,Points Limit,2021-06-10 00:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
148952,,2021-06-10 03:38:31,67051,2021-06-10 04:53:41,67051,2021-06-10 04:54:55,67051,test_MK,customer.id=150840052,test_Magda Kalkus,,test_MK,2021-06-10 00:00:00,I,,ER,,,"{""included"":[],""excluded"":[]}"
149952,,2021-06-10 15:40:02,36001,2022-09-08 06:42:55,36001,,,FMCCMlst,"And(transaction.activityCode='FMCC', transaction.rewardProgram='F')",FMCC milestones issuance DO NOT ACTIVATE ON TIERS LAUNCH DATE https://www.jira.ford.com/browse/CPPCLM-121877,,FMCC milestones issuance,2020-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
150952,,2021-06-15 02:51:29,67051,2022-09-08 06:42:27,36001,,,PTSLimit,transaction.totalPointsValue>=5000,Check for potential fraud whether limit of points within single transaction is exceeded.,,Points Limit,2021-06-15 00:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
151952,,2021-06-21 08:21:41,36001,2022-09-08 06:42:55,36001,,,CostcoCL,"transaction.RewardExists('CostcoBlue', 'CostcoSilver')",,,Costco Partner Offer Claim,2021-01-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
151953,,2021-06-21 09:00:13,67051,2022-09-08 06:42:55,36001,,,TRBr&SlTr,"And(Not(customer.IsInSegment('FPR_TaskRabbit_offer_CLAIMED')), Or(transaction.RewardExists('TaskRabbitBronzeTier'), transaction.RewardExists('TaskRabbitSilverTier')))",Task Rabbit Bronze & Silver Tier Offer Claimed,,Task Rabbit Bronze & Silver Tier Offer Claimed,2021-01-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
152002,,2021-06-21 08:35:08,67051,2022-09-08 06:42:55,36001,,,TRBlueTier,"And(Not(customer.IsInSegment('FPR_TaskRabbit_offer_CLAIMED')), customer.Attribute('MaxBlueTier'), transaction.RewardExists('TaskRabbitBlueTier'))",Task Rabbit Blue Tier Coupon Issuance and Claim Rule,,Task Rabbit Blue Tier Coupon Issuance,2021-06-21 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
152952,,2021-06-22 04:43:38,67051,2021-06-28 09:50:30,67051,2021-06-28 09:50:36,67051,RacingBlue,"And(transaction.RewardExists('RacingSchoolBlue'), customer.Attribute('MaxBlueTier'))",Racing School Partner Offer for Blue Tier,2022-02-28 00:00:00,Racing School Partner Offer for Blue Tier,2021-06-23 00:00:00,I,,BR,,,"{""included"":[],""excluded"":[]}"
153952,,2021-06-22 15:07:59,36001,2022-09-08 06:42:55,36001,,,ProFootbal,transaction.RewardExists('ProFootballBOGO'),Changes status of the order and adds a customer to claimed segment,,Pro Football Hall of Fame Partner Offer Claim,2021-01-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
154952,,2021-06-28 15:46:36,36001,2022-09-08 06:42:55,36001,,,UDB_feedB,"And(transaction.earnCode='Service', transaction.rewardProgram='F')",Bonus points for RO for Silver and Blue Tier customers.,,UDB feed Bonus Points,2021-07-01 00:00:00,A,,ER,,,"{""included"":[],""excluded"":[]}"
155952,,2021-07-01 09:22:36,67051,2022-09-08 06:42:55,36001,,,AwardARN,"And(Or(customer.CurrentActivityAttribute('TransactionCode')='05', customer.CurrentActivityAttribute('TransactionCode')='26'), transaction.activityCode='ActiveCardholder')",50 Milestones Award for Active Card Holder Milestones​ per calendar year per ARN,,Award Active Card Holder Milestones per ARN,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
156952,,2021-07-12 07:04:47,67051,2022-09-08 06:42:55,36001,,,Mlst_CMCPO,"And(InList(TrnRuleParam('ReasonCode'), transaction.reasonCode), transaction.rewardProgram='F')",Bonus Milestones for Points Adjustment Vehicle Purchase,,Bonus Milestones for Points Adjustment Vehicle Purchase,2021-01-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
157952,,2021-08-30 04:36:23,28001,2022-09-08 06:42:55,36001,,,TWTest,transaction.activityCode='LOGIN',,,TWTTest,2021-08-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
158952,,2021-08-30 09:03:40,28001,2022-09-08 06:42:55,36001,,,LRC,transaction.activityCode='LateRewardChoice',,,LateRewardChoice,2021-08-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
158953,,2021-08-30 09:48:10,28001,2022-09-08 06:42:27,36001,,,LRC,transaction.activityCode='LateRewardChoice',,,LateRewardChoice,2021-08-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
159952,,2021-09-15 10:12:08,36001,,,2022-01-26 05:18:06,36001,BZ_test,transaction.activityCode='LOGIN',,,BZ Test,2021-08-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
160952,,2021-10-12 03:38:17,28001,2022-09-08 06:42:55,36001,,,AddVeh,transaction.activityCode='AddVehicle',AddVehicle validation and processing Business Rule,,AddVehicle,2021-10-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
161952,,2021-11-10 05:59:44,56001,2022-09-08 06:42:55,36001,,,LAR_YEB,customer.rewardProgram='L',,2021-12-31 23:59:59,LAR Year End Bonus Black Label and Reserve tier,2021-11-01 00:00:00,A,,WC,,,"{""included"":[],""excluded"":[]}"
162952,,2021-11-15 07:47:15,56001,2022-09-08 06:42:55,36001,,,SXMOffer,"InList(orderReward.code, TrnRuleParam('SXMRewards'))",,,SXM offer claim confirmation,2021-11-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
163952,,2021-12-08 07:03:59,57001,2021-12-13 04:23:03,75056,,,1STTCStore,IsEmpty(customer.Attribute('FirstTCDate')),,,Promotion that stores original date of TC's acceptance,2021-12-08 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
163953,,2021-12-08 07:42:04,57001,2021-12-13 04:23:03,75056,,,TrnAtrAct,,,,Set Act Trn Attributes,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
164952,,2021-12-08 07:23:26,57001,2021-12-13 04:23:03,75056,,,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,FPR Vehicle No Modem New,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
165952,,2021-12-08 07:57:04,57001,2021-12-28 06:53:42,75056,,,AccCat,"Or(InList(transaction.activityCode, TrnRuleParam('ADJUSTMENT_CODES'), TrnRuleParam('REDEEM_CODES')), transaction.pointsText!='0')",Customer activity accounting classification,,Accounting Category,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
166952,,2021-12-08 08:22:48,57001,2021-12-10 09:43:49,75056,,,1STTCStore,IsEmpty(customer.Attribute('FirstTCDate')),,,Promotion that stores original date of TC's acceptance,2021-12-01 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
166953,,2021-12-08 08:32:24,57001,2021-12-10 09:43:49,75056,,,TrnAtrAct,,,,Set Act Trn Attributes,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
166954,,2021-12-08 08:33:58,57001,2021-12-10 09:43:49,75056,,,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,FPR Vehicle No Modem New,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
167002,,2021-12-08 08:29:23,57001,2021-12-28 07:05:59,75056,,,AccCat,"Or(InList(transaction.activityCode, TrnRuleParam('ADJUSTMENT_CODES'), TrnRuleParam('REDEEM_CODES')), transaction.pointsText!='0')",Customer activity accounting classification,,Accounting Category,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
167952,,2021-12-10 07:46:03,57001,2021-12-10 09:43:49,75056,,,PtsPrtVali,,A technical business rule that validates that partner is non-empty for point issuing transactions.,,Partner non-empty for Point issuing,2021-12-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
167953,,2021-12-10 08:26:07,57001,2021-12-10 09:43:49,75056,,,dlr_nt_enr,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D')",BR will block transactions from dealers not enrolled in FPR,,Dealer not enrolled,2021-12-01 00:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
167954,,2021-12-10 08:43:22,57001,2022-01-21 08:28:04,75056,,,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",,,FPR Vehicle Sale With Modem,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
167955,,2021-12-10 10:10:26,75056,2021-12-13 04:23:02,75056,,,PCValid,Size(transaction.comments)>74,,,Points Correction comment validation,2021-12-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
167956,,2021-12-10 10:40:38,75056,2021-12-13 04:23:03,75056,,,NOT_SUP_TR,,Promotion rejects all transaction which are not actually supported in Ford Program,,Not supported transactions,2021-12-01 00:00:00,A,,"AA, BI, CC, EA, LP, LT, M2, PF, PI, PL, PP, PQ, PR, RE",,,"{""included"":[],""excluded"":[]}"
168002,,2021-12-10 08:03:33,57001,2021-12-10 09:43:49,75056,,,NOT_SUP_TR,,Promotion rejects all transaction which are not actually supported in Ford Program,,Not supported transactions,2021-12-01 00:00:00,A,,"AA, BI, CC, EA, LP, LT, M2, PF, PI, PL, PP, PQ, PR, RE",,,"{""included"":[],""excluded"":[]}"
168003,,2021-12-10 08:11:42,57001,2021-12-10 09:43:47,75056,,,PCValid,Size(transaction.comments)>74,,,Points Correction comment validation,2021-12-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
168052,,2021-12-10 09:20:48,75056,2021-12-10 09:43:49,75056,,,SaleValid,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem')",,,Sale Validation,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
168952,,2021-12-10 10:13:25,75056,2021-12-13 04:23:03,75056,,,PtsPrtVali,,A technical business rule that validates that partner is non-empty for point issuing transactions.,,Partner non-empty for Point issuing,2021-12-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
169952,,2021-12-13 03:14:07,75056,2021-12-13 04:23:03,75056,,,dlr_nt_enr,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D')",BR will block transactions from dealers not enrolled in FPR,,Dealer not enrolled,2021-12-01 00:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
170952,,2021-12-13 03:59:40,75056,,,,,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",,,FPR Vehicle Sale With Modem,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
171952,,2021-12-13 04:20:01,75056,2021-12-13 04:23:03,75056,,,SaleValid,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem')",,,Sale Validation,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
171953,,2021-12-13 04:20:13,36001,2022-09-08 06:42:55,36001,,,LARTierInv,"And(transaction.rewardProgram='L', transaction.activityCode='TierInvitation')",LAR Reserved and Black Label Tier Invitation Rule,,LAR Reserved and Black Label Tier Invitation Rule,2021-12-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
172952,,2021-12-28 06:53:26,75056,2021-12-28 06:57:16,75056,,,MarketPerm,transaction.activityCode='ProvideMarketingPermissions',,,Marketing Permission,2021-12-28 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
172953,,2021-12-28 07:05:41,75056,2021-12-28 07:05:58,75056,,,MarketPerm,transaction.activityCode='ProvideMarketingPermissions',,,Marketing Permission,2021-12-28 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
173952,,2022-01-10 08:08:26,57001,2022-09-08 06:42:55,36001,,,TierCCNoti,customer.rewardProgram='F',,,TierCCChangeNotification,2022-01-10 00:00:00,A,C,CA,,,"{""included"":[],""excluded"":[]}"
173953,,2022-01-10 19:02:34,73051,2022-09-08 06:42:27,36001,,,FPR_MAV,transaction.activityCode='FoCMaverick2022',Promotion issues bonus points when the modem of a Lincoln vehicle is activated within 60 days of the vehicle purchase and the vehicle is new - only for the selected VINs CPPCLM-122288 CLM - FoC FPR Maverick Bonus,,FPR Maverick Bonus,2021-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
173954,,2022-01-10 19:13:31,73051,2022-09-08 06:42:27,36001,,,FPR_MAV_C,transaction.activityCode= 'FoCMaverick2022Cancel',Deduct the FoC FPR Maverick Bonus- promotion issued points when a member cancels the Ford vehicle sale.,,Cancel FPR Maverick Bonus,2020-05-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
174952,,2022-01-11 09:25:23,36001,2022-09-08 06:42:55,36001,,,DFOffer,"Or(InList(orderReward.code, TrnRuleParam('DFRewards')), orderReward.IsInCategory('LAR_CAT_DF'))",,,Digital Codes offer claim confirmation,2022-01-01 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
175952,,2022-01-18 07:32:27,36001,2022-01-26 04:17:10,28001,,,VINcheck,,,,Compare VIN attributes,2016-01-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
175953,,2022-01-18 08:14:15,36001,2022-01-21 11:09:47,36001,2022-01-26 05:18:22,36001,setVIN,,,,Can be removed after Jan 18th,2022-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
176952,,2022-01-21 04:38:57,75056,2022-06-01 03:22:43,28001,,,1STTCStore,"And(Not(IsEmpty(customer.Attribute('ProgramTCDate'))), Or(IsEmpty(customer.Attribute('FirstTCDate')), customer.Attribute('ProgramTCDate')<customer.Attribute('FirstTCDate')))",,,Promotion that stores original date of TC's acceptance,2022-01-21 00:00:00,A,,"CA, CR",,,"{""included"":[],""excluded"":[]}"
176953,,2022-01-21 04:56:06,75056,2022-01-21 08:07:20,75056,,,NOT_SUP_TR,,Promotion rejects all transaction which are not actually supported in Ford Program,,Not supported transactions,2022-01-21 00:00:00,A,,"AA, BI, CC, RE",,,"{""included"":[],""excluded"":[]}"
176954,,2022-01-21 05:07:57,75056,2022-01-21 08:07:20,75056,,,dlr_nt_enr,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D')",BR will block transactions from dealers not enrolled in FPR,,Dealer not enrolled,2022-01-21 00:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
176955,,2022-01-21 07:46:03,75056,2022-01-21 08:07:18,75056,,,PCValid,Size(transaction.comments)>74,,,Points Correction comment validation,2022-01-21 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
176956,,2022-01-21 08:05:46,75056,2022-01-21 08:07:20,75056,,,TrnAtrAct,,,,Set Act Trn Attributes,2022-01-21 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
176957,,2022-01-21 08:13:32,75056,,,,,SaleValid,"InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem')",,,Sale Validation,2022-01-21 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
176958,,2022-01-21 08:17:10,75056,,,,,PtsPrtVali,,A technical business rule that validates that partner is non-empty for point issuing transactions.,,Partner non-empty for Point issuing,2022-01-21 00:00:00,A,,BR,,,"{""included"":[],""excluded"":[]}"
176959,,2022-01-21 08:21:01,75056,,,,,NoModemNEW,"And(transaction.activityCode='SaleNoModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,FPR Vehicle No Modem New,2022-01-21 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
176960,,2022-01-21 08:24:03,75056,2022-01-21 08:29:26,75056,,,ModemNEW,"And(transaction.activityCode='SaleWithModem', transaction.rewardProgram='F', transaction.Attribute('EarnType')='VehicleNew')",,,FPR Vehicle Sale With Modem,2022-01-21 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
176961,,2022-01-21 08:44:03,75056,2022-03-30 05:18:28,36001,,,AccCat,transaction.pointsText!='0',Customer activity accounting classification,,Accounting Category,2022-01-21 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
177952,,2022-01-25 07:34:51,75056,2022-02-07 03:36:28,75056,,,CUS_REG_BL,,,,Customer registration blocked,2022-01-25 00:00:00,A,,CR,,,"{""included"":[],""excluded"":[]}"
178952,,2022-01-28 06:19:10,28001,2022-02-07 03:36:30,75056,,,ModemADV,,Validation and storage of Modem Auth Date,,Mode Auth Date Valid,2018-10-01 00:00:00,A,,"AO, AR, AS, MR",,,"{""included"":[],""excluded"":[]}"
179952,,2022-02-18 11:37:33,36001,2022-09-08 06:42:27,36001,,,UDB_22Q1,activity.code='CANQ1SB',https://www.jira.ford.com/browse/CPPCLM-122431,,CLM - CAN FPR/LAR Q1 Service Bonus,2022-02-14 00:00:00,A,,AC,,,"{""excluded"":[],""included"":[{""code"":""UDB_22Q1Received""}]}"
180952,,2022-02-21 06:24:31,6300,2022-02-21 06:26:45,6300,2022-02-21 06:26:50,6300,UDB_test_m,activity.code='CANQ1SB',https://www.jira.ford.com/browse/CPPCLM-122431,,CLM - CAN FPR/LAR Q1 Service Bonus_clone,2022-02-14 00:00:00,I,,AC,,,"{""excluded"":[],""included"":[{""code"":""UDB_22Q1Received""}]}"
180953,,2022-02-21 06:31:16,6300,2022-02-21 06:35:59,6300,2022-02-21 06:36:10,6300,test_mm_ca,activity.code='CANQ1SB',https://www.jira.ford.com/browse/CPPCLM-122431,,CLM - CAN FPR/LAR Q1 Service Bonus_clone,2022-02-14 00:00:00,I,,AC,,,"{""excluded"":[],""included"":[{""code"":""UDB_22Q1Received""}]}"
181952,,2022-02-22 08:59:51,36001,2022-05-05 06:04:34,56001,,,WelcomeBon,customer.CounterValue('WelcomeBon')=0,,,Welcome Bonus,2022-01-01 00:00:00,A,,CR,,,"{""included"":[],""excluded"":[]}"
181953,,2022-02-22 08:59:52,36001,2022-03-30 05:32:07,36001,,,SaleMachE,transaction.activityCode='MachEPurchase',,,Points for purchasing Mach-E,2022-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
181954,,2022-02-22 08:59:52,36001,2022-05-05 06:13:46,56001,,,MarketPerm,"And(transaction.activityCode='ProvideMarketingPermissions', customer.CounterValue('MarketPerm')=0)",,,Marketing Permission,2022-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
182952,,2022-02-23 11:06:12,57001,2022-07-04 11:38:26,36001,,,blockTest,customer.status='B',,,blockTest,2022-01-01 00:00:00,R,V,CA,,,"{""included"":[],""excluded"":[]}"
183952,,2022-02-24 10:43:20,36001,2022-09-08 06:42:55,36001,,,PMPRCC,transaction.activityCode='PMPReimbursement',Validation of manula PMPReimbursement and attributes setup for ARMIS export,,PMP Reimbursement manual,2021-01-01 00:00:00,A,C,AC,,,"{""included"":[],""excluded"":[]}"
184952,,2022-02-25 10:17:14,36001,2022-09-08 06:42:55,36001,,,LARCCRec,transaction.rewardProgram='L',,,LAR Reserved recognition tier based on FNBO CreditCard feed,2022-01-01 00:00:00,A,B,CA,,,"{""included"":[],""excluded"":[]}"
185952,,2022-03-01 09:10:25,36001,2022-09-08 06:42:27,36001,,,PMPRCC,transaction.activityCode='PMPReimbursement',Validation of manula PMPReimbursement and attributes setup for DSI export,,PMP Reimbursement manual,2021-01-01 00:00:00,A,C,AC,,,"{""included"":[],""excluded"":[]}"
186952,,2022-03-22 11:08:53,28001,2022-09-08 06:42:55,36001,,,VPPR,transaction.activityCode='VPPR',,,VPPR,2022-03-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
187952,,2022-03-22 11:30:49,28001,2022-09-08 06:42:27,36001,,,VPPR,transaction.activityCode='VPPR',,,VPPR,2022-03-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
188952,,2022-04-05 04:42:19,28001,2022-09-08 06:42:26,36001,,,VINdedupl,"Or(And(transaction.type='PC', InList(transaction.reasonCode, 'GUIDES_CM', 'GUIDES_CMCPO', 'VPPR', 'VPPR_CPO')), And(transaction.type='AC', InList(transaction.activityCode, 'SaleWithModem', 'SaleNoModem', 'LincolnSaleWithModem', 'LincolnSaleNoModem')))",As a Guide I want to perform Points Correction for a customer without risking double awarding due to sale already having been processed or being processed in the future.,,Deduplication between Points Corrections and Sales,2021-01-01 00:00:00,A,,"AC, PC",,,"{""included"":[],""excluded"":[]}"
189952,,2022-04-11 06:27:29,87051,2022-04-11 06:27:54,87051,,,1231,,,,123123,2022-04-12 00:00:00,I,,ER,,,"{""included"":[],""excluded"":[]}"
189953,,2022-04-11 11:05:23,36001,2022-04-21 08:02:10,36001,,,FraudBZ,"Or(transaction.appSourceCode='PostmanBZ', 'FB23EC07-EB44-44C4-ABA2-003627655880'=customer.guid, user.login='bzaba')",,,FraudBZ,2020-01-01 00:00:00,R,,"AC, BR, ER, PC",,,"{""included"":[],""excluded"":[]}"
190952,,2022-04-12 10:53:59,75056,2022-09-08 06:42:27,36001,,,LARNoModem,"And(transaction.activityCode='LincolnSaleNoModem', transaction.rewardProgram='L', transaction.Attribute('EarnType')='VehicleNew')",Promotion issued points for non-modem vehicle purchase,,Earn:LAR Vehicle No Modem New,2019-11-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
191002,,2022-04-12 10:55:26,75056,2022-09-08 06:42:27,36001,,,LARCPO,"And(transaction.rewardProgram='L', And(InList(transaction.activityCode, 'LincolnSaleNoModem', 'LincolnSaleWithModem'), transaction.Attribute('EarnType')='VehicleCPO'))",Promotion issued points for CPO vehicle purchase in LAR,,LAR CPO points,2020-09-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
191952,,2022-04-26 04:40:17,36001,2022-09-08 06:42:55,36001,,,LAR_DT_Ctr,"And(transaction.reasonCode='DATA_TRANSFER', customer.rewardProgram='L', Add(transaction.Points('USALINCOLN'), transaction.Points('USADEALERL'))<0)",LAR annual points counter reset when account data transferred so that the counter won't trigger missing recognition alerts,,LAR annual points counter reset when account data transferred,2022-01-01 00:00:00,A,,PC,,,"{""included"":[],""excluded"":[]}"
192952,,2022-07-04 11:36:07,36001,2022-09-08 06:42:55,36001,,,L_FNBOEarn,"And(InList(transaction.activityCode, TrnRuleParam('ccactivityCodes')), transaction.rewardProgram=""L"")",LAR FNBO Earn Business Rule to process LNBO credit card transactions,,LAR FNBO Earn Business Rule,2020-02-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
193952,,2022-07-13 05:08:09,57001,2022-09-08 06:42:55,36001,,,FailedPMP,"And(InList(activity.code, TrnRuleParam('activityCodes')), InList(activity.type, TrnRuleParam('activityTypes')))",,,FailedPMP,2022-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
193953,,2022-07-13 09:33:23,57001,2022-09-08 06:42:27,36001,,,FailedPMP,"And(InList(activity.code, TrnRuleParam('activityCodes')), InList(activity.type, TrnRuleParam('activityTypes')))",,,FailedPMP,2022-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
194952,,2022-07-14 05:16:13,33001,2022-07-15 03:19:06,33001,,,BMTest,transaction.activityCode='SaleWithModemPMPRefund',,,BMTest,2022-07-01 00:00:00,R,,AC,,,"{""included"":[],""excluded"":[]}"
195952,,2022-07-26 09:58:24,36001,2022-09-05 07:59:12,36001,,,CHL_VALID,"Not(InList(activity.code, TrnRuleParam('activityChannelV')))",,,Transaction channel validation,2020-01-01 00:00:00,I,V,AC,,,"{""included"":[],""excluded"":[]}"
196952,,2022-07-27 08:08:57,36001,2022-09-05 09:58:48,36001,,,CHL_VALID,"Not(InList(activity.code, TrnRuleParam('activityChannelV')))",,,Transaction channel validation,2020-01-01 00:00:00,I,,AC,,,"{""included"":[],""excluded"":[]}"
197952,,2022-08-18 05:41:22,36001,2022-09-08 06:42:55,36001,,,DGPprtPts,transaction.reasonCode='DGP',,,Test: Limit of DGP points per partner per day,2022-08-01 00:00:00,I,,PC,,,"{""included"":[],""excluded"":[]}"
198952,,2022-08-18 10:51:05,36001,2022-09-08 06:42:55,36001,,,365D_limit,"And(transaction.totalPointsValue>0, DateDiff(transaction.date, transaction.processDate, 'DAY')>365)",Points can only be awarded for a transaction within 365 days of the Transaction Date,,365 day point award limit,2020-01-01 00:00:00,A,,"AC, ER",,,"{""included"":[],""excluded"":[]}"
199952,,2022-08-26 02:05:28,57001,2022-09-08 06:42:55,36001,,,VINValid,Not(IsEmpty(transaction.Attribute('VIN'))),,,VINValid,2021-01-01 00:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
200952,,2022-08-26 02:16:31,57001,2022-09-08 06:42:26,36001,,,VINValid,Not(IsEmpty(transaction.Attribute('VIN'))),,,VINValid,2021-01-01 00:00:00,A,,"AC, BR, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
201952,,2022-09-05 07:05:31,36001,2022-09-08 06:42:55,36001,,,AtrSubType,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D')",Set attribute transactionItemsSubType and pfsTransactionType for DGP,,Set attribute transactionItemsSubType,2020-01-01 00:00:00,A,,"AC, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
202952,,2022-09-05 09:45:20,36001,2022-09-08 06:42:27,36001,,,AtrSubType,"And(Not(IsEmpty(transaction.partnerId)), partner.category='D')",Set attribute transactionItemsSubType and pfsTransactionType for DGP,,Set attribute transactionItemsSubType,2020-01-01 00:00:00,A,,"AC, ER, PC, WC",,,"{""included"":[],""excluded"":[]}"
203952,,2022-09-08 06:40:00,36001,2022-09-08 06:42:55,36001,,,FPPvalid,"And(transaction.activityCode='FordProtectPlanPurchase', Not(DictionaryItemExist('ALLOWED_CONTRACT_TYPES', customer.CurrentActivityAttribute('ContractType'))))","Ford Protect Plan - contract type validation, reject contract types different than the ones defined in dictionary ALLOWED_CONTRACT_TYPES, temporary rule that can be disabled once the validation on the attribute is implemented.",,Ford Protect Plan - contract type validation,2018-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
203953,,2022-09-08 06:41:26,36001,2022-09-08 06:42:26,36001,,,FPPvalid,"And(transaction.activityCode='FordProtectPlanPurchase', Not(DictionaryItemExist('CONTRACT_TYPES_FOR_REIMBURSEMENT', customer.CurrentActivityAttribute('ContractType'))))","Ford Protect Plan - contract type validation, reject contract types different than the ones defined in dictionary ALLOWED_CONTRACT_TYPES, temporary rule that can be disabled once the validation on the attribute is implemented.",,Ford Protect Plan - contract type validation,2018-01-01 00:00:00,A,,AC,,,"{""included"":[],""excluded"":[]}"
T,592
